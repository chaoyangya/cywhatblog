[{"categories":["Linux","Raid"],"content":"1.什么是Raid 什么是Raid Raid 是英文(Redundant Array of Independent Disks)的缩写，翻译成中文是“独立磁盘冗余阵列”, 简称磁盘阵列（Disk Array）。 简单的说，RAID是一种把多块独立的硬盘（物理硬盘）按不同的方式组合起来形成一个硬盘组（逻辑硬盘），从而提供比单个硬盘更高的存储性能和提供数据备份技术。 组成磁盘阵列的不同方式称为RAID级别（RAID Levels），现在已拥有了从 RAID 0 到 6 七种基本的RAID 级别。另外，还有一些基本RAID级别的组合形式，如RAID 10（RAID 0与RAID 1的组合）等等. ","date":"2021-11-18","objectID":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/:0:1","tags":["Linux"],"title":"Raid磁盘阵列","uri":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/"},{"categories":["Linux","Raid"],"content":"2.Raid的特点 Raid的特点 1.速度 2.安全 ","date":"2021-11-18","objectID":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/:0:2","tags":["Linux"],"title":"Raid磁盘阵列","uri":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/"},{"categories":["Linux","Raid"],"content":"3.Raid的几种模式 Raid 0(性能最佳) Raid 0 把多块物理硬盘设备（至少两块）通过硬件或软件的方式串联在一起，组成一个大的卷组，并将数据一次写入到各个物理硬盘中。这样硬盘设备的读写性能会提升数倍，但是若任意一块硬盘发生故障将导致整个系统的数据都受到破坏。 个人俗解：2块硬盘，将数据均分成`俩份`，每块磁盘存`半份` `Raid 0`的特点 1.使用N块硬盘，获得N倍性能，但N\u003e=2 2.不允许磁盘损坏，任何一块磁盘损坏，即无法使用。 Raid 1(最安全) Raid 1 将数据备份到每块磁盘中，使用空间相当于一块硬盘的容量，但是数据再每块硬盘中备份，相对安全性较高 个人俗解：2块硬盘，每块硬盘存`整份`数据，且相互备份 `Raid 1`的特点 1.使用N块硬盘，备份N份数据，且N\u003e=2 硬盘使用率为 (N/100)%，较为浪费资源，但安全性为N。 2.允许磁盘损坏 Raid 5(性能和安全 55开) Raid 5 把多块硬盘设备（至少三块）的数据奇偶校验信息保存到其他硬盘设备中。 Raid 5 磁盘阵列组中数据的奇偶校验信息并不是单独保存到某一块硬盘设备中，而是存储到除自身以外的其他每一块硬盘设备上，这样的好处是其中任何一设备损坏后不至于出现致命缺陷； 个人俗解：3块硬盘，每块硬盘分`3`份，存`2`份数据，`1`份校验，且互相为奇偶 `Raid 5`的特点 1.使用N块硬盘，备份N份数据，且N\u003e=3 硬盘使用率为 (N-1/N)%，较为浪费资源，但安全性为N。 2.允许磁盘损坏且仅能坏1块 Raid 10(性能和安全 55开) Raid 10 是Raid1 + Raid 0技术的一个组合体。如下图，Raid 10 技术需要至少四块硬盘来组建，其中先分别两两制作成Raid 1磁盘阵列，以保证数据的安全性；然后再对两个Raid 1磁盘阵列实施Raid 0技术，进一步提高硬盘设备的读写速度。这样子从理论上讲，只要坏的不是同一组中的所有硬盘，那么最多可以损坏50%的硬盘设备而不丢失数据。Raid 10技术继承了Raid 0的高读写速度和Raid 1的数据安全性。 个人俗解：4块硬盘，每2块硬盘分1份数据，组合成 Raid 1，俩个Raid 1 再组合成Raid 0 `Raid 10`的特点 1.使用N块硬盘，备份N份数据，且N\u003e=4 硬盘使用率为 (50)%，较为浪费资源，但安全性为N。 2.允许一组Raid 磁盘损坏且仅能坏1块 ","date":"2021-11-18","objectID":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/:0:3","tags":["Linux"],"title":"Raid磁盘阵列","uri":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/"},{"categories":["Linux","Raid"],"content":"4.Raid容错对比图 ","date":"2021-11-18","objectID":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/:0:4","tags":["Linux"],"title":"Raid磁盘阵列","uri":"https://cywhat.cn/Raid%E7%A3%81%E7%9B%98%E9%98%B5%E5%88%97/"},{"categories":["Linux","iftop"],"content":"查看Linux系统下服务器带宽占用情况，使用iftop ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:0","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Linux","iftop"],"content":"1.安装iftop centos: yum install iftop debian: apt-get install iftop ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:1","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Linux","iftop"],"content":"2.使用iftop iftop -i eth1 #查看eth1网卡的带宽占用情况 iftop -i eth1 -P #显示详细端口流量占用 ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:2","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Linux","iftop"],"content":"3.iftop说明 TX:发送流量 RX:接收流量 TOTAL:总流量 Cumm:运行iftop到目前时间的总流量 peak:流量峰值 rates分别表示过去2s/10s/40s的平均流量 ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:3","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Linux","iftop"],"content":"4.iftop其他命令 -i设定监测的网卡,如:# iftop -i eth1 -B 以bytes为单位显示流量(默认是bits),如:# iftop -B -n使host信息默认直接都显示IP,如:# iftop -n -N使端口信息默认直接都显示端口号,如: # iftop -N -F显示特定网段的进出流量,如# iftop -F 10.10.1.0/24或# iftop -F 10.10.1.0/255.255.255.0 -h(display this message),帮助显示参数信息 -p使用这个参数后,中间的列表显示的本地主机信息,出现了本机以外的IP信息; -b使流量图形条默认就显示; -f这个暂时还不太会用,过滤计算包用的; -P使host信息及端口信息默认就都显示; -m设置界面最上边的刻度的最大值,刻度分五个大段显示,例: # iftop -m 100M ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:4","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Linux","iftop"],"content":"5.进去监控界面可使用的命令详情 按h切换是否显示帮助; 按n切换显示本机的IP或主机名; 按s切换是否显示本机的host信息; 按d切换是否显示远端目标主机的host信息; 按t切换显示格式为2行/1行/只显示发送流量/只显示接收流量; 按N切换显示端口号或端口服务名称; 按S切换是否显示本机的端口信息; 按D切换是否显示远端目标主机的端口信息; 按p切换是否显示端口信息; 按P切换暂停/继续显示; 按b切换是否显示平均流量图形条; 按B切换计算2秒或10秒或40秒内的平均流量; 按T切换是否显示每个连接的总流量; 按l打开屏幕过滤功能,输入要过滤的字符,比如ip,按回车后,屏幕就只显示这个IP相关的流量信息; 按L切换显示画面上边的刻度;刻度不同,流量图形条会有变化; 按j或按k可以向上或向下滚动屏幕显示的连接记录; 按1或2或3可以根据右侧显示的三列流量数据进行排序; 按\u003c根据左边的本机名或IP排序; 按\u003e根据远端目标主机的主机名或IP排序; 按o切换是否固定只显示当前的连接; 按f可以编辑过滤代码,这是翻译过来的说法,我还没用过这个! 按!可以使用shell命令,这个没用过!搞明白啥命令在这好用呢! 按q退出监控. ","date":"2021-11-17","objectID":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/:0:5","tags":["Linux"],"title":"Linux使用iftop查看带宽占用情况","uri":"https://cywhat.cn/Linux%E4%BD%BF%E7%94%A8iftop%E6%9F%A5%E7%9C%8B%E5%B8%A6%E5%AE%BD%E5%8D%A0%E7%94%A8%E6%83%85%E5%86%B5/"},{"categories":["Hugo","Loveit"],"content":"小tips 该文章仅仅针对Loveit主题有效，其他自己尝试。 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/:0:0","tags":["Hugo","Loveit"],"title":"Loveit开启评论功能","uri":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"},{"categories":["Hugo","Loveit"],"content":"Loveit开启评论 loveit自带的有valine的配置，我们需要先注册一些要用到的信息 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/:1:0","tags":["Hugo","Loveit"],"title":"Loveit开启评论功能","uri":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"},{"categories":["Hugo","Loveit"],"content":"1.注册Leancloud 评论系统依赖于 leancloud，所以需要先在leancloud中进行相关的准备工作。 登录 或 注册 LeanCloud（国际版） 必须验证邮箱和手机号 成功后，进入后台点击左上角的创建应用： ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/:1:1","tags":["Hugo","Loveit"],"title":"Loveit开启评论功能","uri":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"},{"categories":["Hugo","Loveit"],"content":"2.域名绑定 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/:1:2","tags":["Hugo","Loveit"],"title":"Loveit开启评论功能","uri":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"},{"categories":["Hugo","Loveit"],"content":"修改配置 在 config.toml中找到 valine 将需要内容加入 [params.page.comment.valine] enable = true # true为开启 false为关闭 appId = \"XWDPvzYoXXXXXGqOm-MdYXbMMI\" # 需要更换为自己的 appKey = \"U3pRXXXXXSADAXAaAaoRQ\" # 需要更换为自己的 placeholder = \"说点什么吧\" avatar = \"mp\" meta= \"\" pageSize = 10 lang = \"\" visitor = true recordIP = true highlight = true enableQQ = false serverURLs = \"https://mukjinfv.api.lncldglobal.com\" # URL不需要替换 注意 如果不希望该文章被评论，在title加入字段 comment 且值为 false 即可 title: \"关于\" date: 2021-10-19T22:01:44+08:00 reward: false comment: false # comment为false时 该文章不可被评论 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/:1:3","tags":["Hugo","Loveit"],"title":"Loveit开启评论功能","uri":"https://cywhat.cn/Loveit%E5%BC%80%E5%90%AF%E8%AF%84%E8%AE%BA%E5%8A%9F%E8%83%BD/"},{"categories":["Hugo","Loveit"],"content":"小tips 该文章仅仅针对Loveit主题有效，其他自己尝试。 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:0:0","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"添加文章打赏功能 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:0","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"1.配置添加 在 config.toml 添加下面的变量 [params.reward] # 文章打赏 enable = true # true为开启 flase为关闭 wechat = \"/images/wechat.png\" # 微信二维码文件路径 alipay = \"/images/alipay.png\" # 支付宝二维码文件路径 注意一下 这里是对全局文章生效，也可以在每篇文章的文件头里添加如下变量来控制是否启用该功能： title: \"xxxx\" date: 2021-10-21T16:36:41+08:00 draft: false tags: [\"xxx\",\"xxx\"] categories: [\"xxx\",\"xxx\"] reward: false # flase关闭该文章打赏功能 ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:1","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"2.修改主题中的国际化文件 在 config.toml 配置文件中修改中文预演代码为小写的 zh-cn,如下： defaultContentLanguage = \"zh-cn\" 在 \\themes\\LoveIt\\i18n\\zh-CN.toml 中添加如下配置： [reward] other = \"赞赏支持\" #other中的文字可以自由更改 [rewardAlipay] other = \"支付宝打赏\" [rewardWechat] other = \"微信打赏\" ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:2","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"3.添加模板文件 在 \\themes\\layouts\\partials\\single\\ 中新建 reward.html html内容如下： {{ if or .Params.reward (and .Site.Params.reward.enable (ne .Params.reward false)) -}} \u003cdiv class=\"post-reward\"\u003e \u003cinput type=\"checkbox\" name=\"reward\" id=\"reward\" hidden/\u003e \u003clabel class=\"reward-button\" for=\"reward\"\u003e{{ T \"reward\" }}\u003c/label\u003e \u003cdiv class=\"qr-code\"\u003e {{ $qrCode := .Site.Params.reward }} {{- $cdnPrefix := .Site.Params.cdnPrefix -}} {{ with $qrCode.wechat -}} \u003clabel class=\"qr-code-image\" for=\"reward\"\u003e \u003cimg class=\"image\" src=\"{{ $cdnPrefix }}{{ . }}\"\u003e \u003cspan\u003e{{ T \"rewardWechat\" }}\u003c/span\u003e \u003c/label\u003e {{- end }} {{ with $qrCode.alipay -}} \u003clabel class=\"qr-code-image\" for=\"reward\"\u003e \u003cimg class=\"image\" src=\"{{ $cdnPrefix }}{{ . }}\"\u003e \u003cspan\u003e{{ T \"rewardAlipay\" }}\u003c/span\u003e \u003c/label\u003e {{- end }} \u003c/div\u003e \u003c/div\u003e {{- end }} ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:3","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"4.修改模板文件 修改 /themes/LoveIt/layouts/posts/single.html 找到 {{- /* Content */ -}} 修改前内容 {{- /* Content */ -}} \u003cdiv class=\"content\" id=\"content\"\u003e {{- dict \"Content\" .Content \"Ruby\" $params.ruby \"Fraction\" $params.fraction \"Fontawesome\" $params.fontawesome | partial \"function/content.html\" | safeHTML -}} \u003c/div\u003e 修改为如下内容 修改后内容 {{- /* Content */ -}} \u003cdiv class=\"content\" id=\"content\"\u003e {{- dict \"Content\" .Content \"Ruby\" $params.ruby \"Fraction\" $params.fraction \"Fontawesome\" $params.fontawesome | partial \"function/content.html\" | safeHTML -}} {{- /* Reward */ -}} #新增 {{- partial \"single/reward.html\" . -}} #新增 \u003c/div\u003e ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:4","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"5.新增css代码 在 /themes/assets/css/ 中的 _custom.scss 添加如下内容 /* 打赏 */ article .post-reward { margin-top: 20px; padding-top: 10px; text-align: center; border-top: 1px dashed #e6e6e6 } article .post-reward .reward-button { margin: 15px 0; padding: 3px 7px; display: inline-block; color: #c05b4d; border: 1px solid #c05b4d; border-radius: 5px; cursor: pointer } article .post-reward .reward-button:hover { color: #fefefe; background-color: #c05b4d; transition: .5s } article .post-reward #reward:checked~.qr-code { display: block } article .post-reward #reward:checked~.reward-button { display: none } article .post-reward .qr-code { display: none } article .post-reward .qr-code .qr-code-image { display: inline-block; min-width: 200px; width: 40%; margin-top: 15px } article .post-reward .qr-code .qr-code-image span { display: inline-block; width: 100%; margin: 8px 0 } article .post-reward .qr-code .image { width: 200px; height: 200px } ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:5","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"6.测试查看 hugo server -D ","date":"2021-10-21","objectID":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/:1:6","tags":["Hugo","Loveit"],"title":"Loveit主题开启文章赞赏","uri":"https://cywhat.cn/Loveit%E4%B8%BB%E9%A2%98%E5%BC%80%E5%90%AF%E6%96%87%E7%AB%A0%E8%B5%9E%E8%B5%8F/"},{"categories":["Hugo","Loveit"],"content":"前景 hugo的渲染速度\"婶婶”(深深)的打动了我，于是决定从hexo迁移到hugo，迁移的帖子之后总结一下，先记录一下自己设置hugo下的Loveit主题的一些有意思的东西 ","date":"2021-10-21","objectID":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/:0:0","tags":["Hugo","Loveit"],"title":"Loveit主题的一些美化设置","uri":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/"},{"categories":["Hugo","Loveit"],"content":"LoveIt扩展Shortcodes ","date":"2021-10-21","objectID":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/:1:0","tags":["Hugo","Loveit"],"title":"Loveit主题的一些美化设置","uri":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/"},{"categories":["Hugo","Loveit"],"content":"1.admonition admonition比较常用，有12个样式，只需要更改对应的 type 就可以了，list如下： ","date":"2021-10-21","objectID":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/:1:1","tags":["Hugo","Loveit"],"title":"Loveit主题的一些美化设置","uri":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/"},{"categories":["Hugo","Loveit"],"content":"2.用法： This is a tip 一个\"技巧\"横幅 或者 This is a tip 一个\"技巧\"横幅 ","date":"2021-10-21","objectID":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/:1:2","tags":["Hugo","Loveit"],"title":"Loveit主题的一些美化设置","uri":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/"},{"categories":["Hugo","Loveit"],"content":"3.示例 注意 type=note 摘要 type=abstract 信息 type=info 技巧 type=tip 成功 type=success 问题 type=question 警告 type=warning 失败 type=failure 危险 type=danger Bug type=Bug 示例 type=example 引用 type=quote ","date":"2021-10-21","objectID":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/:1:3","tags":["Hugo","Loveit"],"title":"Loveit主题的一些美化设置","uri":"https://cywhat.cn/loveit%E4%B8%BB%E9%A2%98%E7%9A%84%E4%B8%80%E4%BA%9B%E7%BE%8E%E5%8C%96%E8%AE%BE%E7%BD%AE/"},{"categories":null,"content":"! \" —-关于我—-” -- coding:utf-8 -- class IntroduceMyself(): ''' 测开Dog的介绍 ''' def __init__(self): self.name = \"cywhat\" self.age = 26 self.height = \"172cm\" self.email = \"cywhat@cywhat.cn\" self.wechat = \"SwagAlong\" self.hometown = \"山西忻州\" self.hobby = \"LOL/王者荣耀/摄影\" self.school = \"麻省理工(YY)\" self.graduation_time = 4 self.blog = \"https://cywhat.cn\" ","date":"2021-10-19","objectID":"https://cywhat.cn/about/:0:0","tags":null,"title":"关于","uri":"https://cywhat.cn/about/"},{"categories":["Django"],"content":"前景： 自己写的测试工具发现最近打开页面时快时慢，查了原因，发现是css引用的谷歌字体源：fonts.googleapis.com 解决办法： ","date":"2021-10-12","objectID":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/:0:0","tags":["Django"],"title":"fonts.googleapis.com访问较慢[已解决]","uri":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/"},{"categories":["Django"],"content":"1.替换字体库源地址 查找引用了谷歌源的css文件 更换源地址 fonts.googleapis.com 更换为---\u003e cdnjs.loli.net ","date":"2021-10-12","objectID":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/:0:1","tags":["Django"],"title":"fonts.googleapis.com访问较慢[已解决]","uri":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/"},{"categories":["Django"],"content":"2.如果是html引用，更改link \u003clink rel=\"stylesheet\" href=\"https://cdnjs.loli.net/css?family=IBM+Plex+Sans:\" \u003e ","date":"2021-10-12","objectID":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/:0:2","tags":["Django"],"title":"fonts.googleapis.com访问较慢[已解决]","uri":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/"},{"categories":["Django"],"content":"3.字体下载到本地(推荐) #1.下载google字体 url访问 https://fonts.googleapis.com/css?family=IBM+Plex+Sans:100,100i,200,200i,300,300i,400,400i,500,500i,600,600i,700,700i|Rubik:300,300i,400,400i,500,500i,700,700i,900,900i\u0026display=swap #2.保存css字体文件到本地，并重命名 #3.css/html引入字体文件 html \u003clink rel=\"stylesheet\" href=\"/fonts.css\" \u003e css import \"fonts.css\"; ","date":"2021-10-12","objectID":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/:0:3","tags":["Django"],"title":"fonts.googleapis.com访问较慢[已解决]","uri":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/"},{"categories":["Django"],"content":"4.重新访问页面 访问时长达到了 ms 级别 ","date":"2021-10-12","objectID":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/:0:4","tags":["Django"],"title":"fonts.googleapis.com访问较慢[已解决]","uri":"https://cywhat.cn/fonts-googleapis-com%E8%AE%BF%E9%97%AE%E8%BE%83%E6%85%A2-%E5%B7%B2%E8%A7%A3%E5%86%B3/"},{"categories":["Avn"],"content":"前景： 服务器中俩个服务需要用到node，但是其中一个服务需要使用低版本的node，另一个则需要高版本node ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:0:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"1.首先安装nvm curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash #添加环境变量 vim ~/.bashrc #内容如下： export NVM_DIR=\"$HOME/.nvm\" [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" # This loads nvm [ -s \"$NVM_DIR/bash_completion\" ] \u0026\u0026 \\. \"$NVM_DIR/bash_completion\" # This loads nvm bash_completion #让配置生效 source ~/.bashrc ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:1:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"2.安装avn nvm i -g avn ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:2:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"3.设置avn avn setup ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:3:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"4.进入想启动项目的根目录新建文件 cd XX #新建 .node-version文件 touch .node-version #配置需要使用的node版本 echo v8.9.0 \u003e\u003e .node-version #V后面跟版本号 ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:4:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"5.把avn加入系统变量 echo `source \"$HOME/.avn/bin/avn.sh\" # load avn` \u003e\u003e ~/.bashrc #这里如果是zshrc的话自行更改 ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:5:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Avn"],"content":"6.然后在根目录查看node和npm版本 node -v npm -v ","date":"2021-09-29","objectID":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/:6:0","tags":["Avn","Node"],"title":"avn自动切换node版本","uri":"https://cywhat.cn/avn%E8%87%AA%E5%8A%A8%E5%88%87%E6%8D%A2node%E7%89%88%E6%9C%AC/"},{"categories":["Django"],"content":"前景： 我在使用django的form组件时，发现在view函数中的`form.is_valid()`在form表单校验未通过的情况下，返回的仍然是True，最后发现还是form表单的问题，异常函数并没有传递给view函数 问题代码： form部分 def clean_email(self): \"\"\" 邮箱校验 :return: \"\"\" email_title = \"验证码\" code = random.randrange(1000, 9999) context = { 'code': str(code) } email_template_name = 'tools_email.html' t = loader.get_template(email_template_name) html_content = t.render(context) email = self.cleaned_data['email'] msg = EmailMessage(email_title, html_content, settings.EMAIL_FROM, [email] ) msg.content_subtype = 'html' exists = models.UserInfo.objects.filter(email=email).exists() if not exists: return ValidationError('邮箱未注册') #注意就是这个异常函数ValidationError，没有将异常传给view send_status = msg.send() if not send_status: self.add_error(\"email\", '发送邮箱失败,{}'.format(send_status['errmsg'])) conn = get_redis_connection() conn.set(email, code, ex=120) return email view部分 def send_sms(request): form = SendEmailSmsForm(request, data=request.POST) if form.is_valid(): #这里接收form传过来的异常，如果有异常则返回false，反之true return JsonResponse({'status': True}) return JsonResponse({'status': False, 'error': form.errors}) 原因： 我也不知道为什么 ValidationError 为什么没有把异常抛给view 更换另一个抛出异常的函数即可 解决： return ValidationError('邮箱未注册') #改为 self.add_error(\"email\", \"邮箱未注册\") # email为异常参数的field \"邮箱未注册\" 为报错文案 ","date":"2021-09-24","objectID":"https://cywhat.cn/Django%E4%B8%AD%E7%9A%84form%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/:0:0","tags":["Django"],"title":"Django中的form表单校验","uri":"https://cywhat.cn/Django%E4%B8%AD%E7%9A%84form%E8%A1%A8%E5%8D%95%E6%A0%A1%E9%AA%8C/"},{"categories":["Hexo"],"content":"前景： 更换新设备 or 更换新工作环境需要重新本地部署hexo环境,需要有整个工程的文件夹 ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:0:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Hexo"],"content":"1.安装hexo npm install -g hexo-cli ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:1:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Hexo"],"content":"2.安装node_moudles cd blog #blog是你的工程名 npm install ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:2:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Hexo"],"content":"3.安装git部署插件 npm install hexo-deployer-git --save #安装好需要去git地址配置ssh密钥，用来本地push和pull ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:3:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Hexo"],"content":"4.安装优化图片加载速度插件 npm install hexo-all-minifier --save \u0026\u0026 cnpm install hexo-all-minifier --save 更改hexo配置 ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:4:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Hexo"],"content":"5.更改hexo添加图片方式 npm install https://github.com/CodeFalling/hexo-asset-image --save 解决hexo图片不展示问题 ","date":"2021-09-24","objectID":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/:5:0","tags":["Hexo"],"title":"hexo迁移需要进行安装的一些依赖","uri":"https://cywhat.cn/hexo%E8%BF%81%E7%A7%BB%E9%9C%80%E8%A6%81%E8%BF%9B%E8%A1%8C%E5%AE%89%E8%A3%85%E7%9A%84%E4%B8%80%E4%BA%9B%E4%BE%9D%E8%B5%96/"},{"categories":["Sonarqube"],"content":"前景 jenkins构建sonarqube报错 报错： \"ERROR: Re-run SonarScanner using the -X switch to enable full debug logging. ","date":"2021-09-23","objectID":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/:0:0","tags":["Jenkins","Sonarqube"],"title":"ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.","uri":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/"},{"categories":["Sonarqube"],"content":"1.打开sonarqube的SCM配置 ","date":"2021-09-23","objectID":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/:1:0","tags":["Jenkins","Sonarqube"],"title":"ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.","uri":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/"},{"categories":["Sonarqube"],"content":"2.重新构建 ","date":"2021-09-23","objectID":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/:2:0","tags":["Jenkins","Sonarqube"],"title":"ERROR: Re-run SonarScanner using the -X switch to enable full debug logging.","uri":"https://cywhat.cn/ERROR-Re-run-SonarScanner-using-the-X-switch-to-enable-full-debug-logging/"},{"categories":["Sonarqube"],"content":"前言 Linux版本:centos7.6 Java:Jdk11 SonarQube:8.2.0.32929 PostgreSQL:12 sonar-scanner:4.6.2.2472 ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:0:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"1.安装Jdk 安装JDK ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:1:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"2.安装PostgreSQL 1.安装镜像 sudo yum install -y https://download.postgresql.org/pub/repos/yum/reporpms/EL-7-x86_64/pgdg-redhat-repo-latest.noarch.rpm 2.安装PostgreSQL sudo yum install -y postgresql12-server 3.加到系统自启动 sudo /usr/pgsql-12/bin/postgresql-12-setup initdb 4.修改md5加密 vim /var/lib/pgsql/12/data/pg_hba.conf 5.启动 sudo systemctl enable postgresql-12 sudo systemctl start postgresql-12 ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:2:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"3.安装SonarQube 1.下载SonarQube wget https://binaries.sonarsource.com/Distribution/sonarqube/sonarqube-8.2.0.32929.zip 2.解压 unzip sonarqube-8.2.0.32929.zip 3.重命名 mv sonarqube-8.2.0.32929 /usr/local/sonarqube ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:3:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"4.添加用户 1.新增用户 sudo adduser sonar 2.设置密码 sudo passwd sonar 3.赋予权限 chmod -R sonar:sonar /usr/local/sonarqube ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:4:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"5.进入PostgreSQL配置数据库 1.切换到postgre用户 sudo su - postgre 2.进入psql psql -U postgres 3.创建库表结构等 #依次执行 CREATE DATABASE sonar; CREATE USER sonar WITH ENCRYPTED PASSWORD '\u003csonar-password\u003e'; #\u003c\u003e 里面是sonar用户的密码 可自定义 GRANT ALL PRIVILEGES ON DATABASE sonar TO sonar; ALTER DATABASE sonar OWNER TO sonar; ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:5:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"6.修改sonarqube配置 1.vim /usr/local/sonarqube/conf/sonar.properties #加入如下配置 # DATABASE sonar.jdbc.username=sonar sonar.jdbc.password=\u003csonar-user-password\u003e sonar.jdbc.url=jdbc:postgresql://localhost/sonar sonar.jdbc.maxActive=60 sonar.jdbc.maxIdle=5 sonar.jdbc.minIdle=2 sonar.jdbc.maxWait=5000 sonar.jdbc.minEvictableIdleTimeMillis=600000 sonar.jdbc.timeBetweenEvictionRunsMillis=30000 sonar.jdbc.removeAbandoned=true sonar.jdbc.removeAbandonedTimeout=60 2.如需要自定义端口 需要更改端口 sonarqube默认为9000 search默认为9001 #根据自己需求，可不修改 sonar.web.port=9000 #修改sonarqube端口 sonar.search.port=9001 #修改search端口,如果端口冲突必须要更改噢 ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:6:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"7.启动sonarqube su sonar #必须用非root启动 cd /usr/local/sonarqube/bin/linux-x86-64/ sh sonar.sh start ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:7:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Sonarqube"],"content":"8.安装sonar-scanner 下载sonar-scanner 提取码: qtd4 1.上传到服务器 2.解压 unzip sonar-scanner-cli-4.6.2.2472-linux.zip 3.重命名 mv sonar-scanner-cli-4.6.2.2472-linux /usr/local/scanner 4.建立软链接 ln -s /usr/local/scanner/bin/sonar-scanner /usr/local/bin/scanner PS:常见报错汇总 报错： ERROR: [4] bootstrap checks failed [1]: max file descriptors [4096] for elasticsearch process is too low, increase to at least [65536] [2]: max number of threads [1024] for user [hadoop] is too low, increase to at least [2048] [3]: max virtual memory areas vm.max_map_count [65530] is too low, increase to at least [262144] [4]: system call filters failed to install; check the logs and fix your configuration or disable system call filters at your own risk 解决： ```bash 1.vim /etc/security/limits.conf #修改后需要将用户sonar重新登入才生效 #内容末尾加入 sonar soft nofile 65536 #sonar是你在linux中设置的启动sonarqube的用户 sonar hard nofile 100000 sonar soft nproc 4096 sonar hard nproc 4096 ulimit -Hn #查看硬限制是否生效 2.vim /etc/sysctl.conf #内容末尾加入 vm.max_map_count=655360 保存修改后 sysctl -p 3.重启机器 **必须重启** ``` ","date":"2021-09-22","objectID":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/:8:0","tags":["Sonarqube","Linux"],"title":"Linux搭建sonarqube","uri":"https://cywhat.cn/Linux%E6%90%AD%E5%BB%BAsonarqube/"},{"categories":["Jenkins"],"content":"1.启动jenkins systemctl start jenkins #如果命令不可使用，首先要把jenkins放到系统启动配置中，详情请百度 ","date":"2021-09-18","objectID":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/:1:0","tags":["Jenkins"],"title":"Jenkins启动报错原因分析","uri":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/"},{"categories":["Jenkins"],"content":"2.查看jenkins启动状态 systemctl status jenkins.service ","date":"2021-09-18","objectID":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/:2:0","tags":["Jenkins"],"title":"Jenkins启动报错原因分析","uri":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/"},{"categories":["Jenkins"],"content":"3.分析报错原因 查看位置 /system.slice/jenkins.service 后面是原因 ","date":"2021-09-18","objectID":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/:3:0","tags":["Jenkins"],"title":"Jenkins启动报错原因分析","uri":"https://cywhat.cn/Jenkins%E5%90%AF%E5%8A%A8%E6%8A%A5%E9%94%99%E5%8E%9F%E5%9B%A0%E5%88%86%E6%9E%90/"},{"categories":["Jdk"],"content":"1.下载jdk 下载安装 提取码: brq2 ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:1:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"2.上传到服务器 ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:2:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"3.解压 $ tar -zvxf openjdk-11+28_linux-x64_bin.tar.gz ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:3:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"4.移动文件夹并重命名 $ mv jdk-11/ /usr/local/java ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:4:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"5.配置环境变量 vim /etc/profile export JAVA_HOME=/usr/local/java export PATH=$JAVA_HOME/bin:$PATH #一定要放在最后 source /etc/profile #让配置生效 ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:5:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"6.建立软链接 ls -n /usr/local/java/bin/java /usr/bin/java ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:6:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Jdk"],"content":"7.查看java版本 java -version ","date":"2021-09-18","objectID":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/:7:0","tags":["Jdk","Linux"],"title":"Linux安装jdk11","uri":"https://cywhat.cn/Linux%E5%AE%89%E8%A3%85jdk11/"},{"categories":["Django"],"content":"前景： 使用django部署的web应用，在url错误的情况下，页面会报错简单的404页面，并不美观 Django版本：1.11.7 高于2.0版本不可使用以下语法，切记 ","date":"2021-09-17","objectID":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/:0:1","tags":["Django"],"title":"Django自定义404页面","uri":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/"},{"categories":["Django"],"content":"1.settings设置 修改 settings.py 的配置如下 #自定义页面会在非调试模式下生效，所以debug=false DEBUG=False ALLOWED_HOST=[\"*\"] ","date":"2021-09-17","objectID":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/:1:0","tags":["Django"],"title":"Django自定义404页面","uri":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/"},{"categories":["Django"],"content":"2.项目根目录下的views.py配置 views.py from django.shortcuts import render def page_not_found(request): return render(request,'404.html') #404的html要写你自定义的404html文件 ","date":"2021-09-17","objectID":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/:2:0","tags":["Django"],"title":"Django自定义404页面","uri":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/"},{"categories":["Django"],"content":"3.项目根目录的urls.py配置 urls.py #如果urls有别的路由位置，也必须在原urls.py文件下修改，否则不生效 from . import views handler404 = views.page_not_found ","date":"2021-09-17","objectID":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/:3:0","tags":["Django"],"title":"Django自定义404页面","uri":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/"},{"categories":["Django"],"content":"4.重新发布即可生效 ","date":"2021-09-17","objectID":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/:4:0","tags":["Django"],"title":"Django自定义404页面","uri":"https://cywhat.cn/Django%E8%87%AA%E5%AE%9A%E4%B9%89404%E9%A1%B5%E9%9D%A2/"},{"categories":["Mac"],"content":" 前景： 前几天系统降级了，发现之前使用的一些得心应手的app忘记名字了，很难找，不过最后还是在时间机器里找到了，特意开帖记录分享一下，常见的就不分享了，都知道，主要分享一些难找的，但是特别好用的。 Screenium 3 \"屏幕录制(全屏/区域/自定义区域)，支持剪辑\" Permute 3 \"视频格式转换，直接拖拽文件即可\" App Cleaner \u0026 Uninstaller \"应用深度清理卸载，非常好用\" Air2a Gui \"下载神器，配合油猴更方便\" Fork lift \"finder增强工具，同时支持ftp\" pap.er \"4K壁纸软件\" IINA \"视频播放器\" Sublime Text \"文本编辑器，支持各种代码格式\" MWeb Pro \"markdown编辑器，写博客神器\" The Unarchiver \"免费解压神器\" TinyCal \"简洁小巧的日历，Appstore可下载(收费)\" Perculia \"蓝牙快速连接，支持更改图标\" Wondershare UniConverter \"最好的视频/图片格式转换编辑器\" ","date":"2021-09-10","objectID":"https://cywhat.cn/Mac%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/:0:0","tags":["Mac"],"title":"Mac必备软件推荐","uri":"https://cywhat.cn/Mac%E5%BF%85%E5%A4%87%E8%BD%AF%E4%BB%B6%E6%8E%A8%E8%8D%90/"},{"categories":["Html"],"content":"简单js几行代码实现点击按钮,实现加载中，且置灰不可点击 ","date":"2021-09-09","objectID":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/:1:0","tags":["Html","JS"],"title":"html简单实现button加载中且置灰不可点击","uri":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/"},{"categories":["Html"],"content":"1.html部分 \u003cbutton id=\"Submit\" type=\"button\" class=\"btn btn-rounded btn-primary mb-6\" value=\"获取验证码\"\u003e \u003c/button\u003e ","date":"2021-09-09","objectID":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/:1:1","tags":["Html","JS"],"title":"html简单实现button加载中且置灰不可点击","uri":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/"},{"categories":["Html"],"content":"2.JS部分 function ClickBtnSms() { $('#Submit').click(function () { //按钮校验，disable = true不可点击 val里面的内容替换成你想实现的加载中/loading...等 $('#Submit').val('加载中...').prop('disabled', true); $.ajax({ url: \"url\", type: \"GET\", data: {data: data}, dataType: \"JSON\", // 将服务端返回的数据反序列化为字典 success: function (res) { if (res.status) { //这里放拿到res状态想要执行的函数 } else { //如果报错，需要恢复获取验证码的按钮 $('#Submit').val('获取验证码').prop('disabled', false); } } }) }) } ","date":"2021-09-09","objectID":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/:1:2","tags":["Html","JS"],"title":"html简单实现button加载中且置灰不可点击","uri":"https://cywhat.cn/html%E7%AE%80%E5%8D%95%E5%AE%9E%E7%8E%B0button%E5%8A%A0%E8%BD%BD%E4%B8%AD%E4%B8%94%E7%BD%AE%E7%81%B0%E4%B8%8D%E5%8F%AF%E7%82%B9%E5%87%BB/"},{"categories":["Django"],"content":"1.setting配置 EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend' EMAIL_HOST = \"smtp.163.com\" # 服务器 EMAIL_PORT = 25 # 一般情况下都为25 EMAIL_HOST_USER = \"xxxx@163.com\" # 账号 EMAIL_HOST_PASSWORD = \"XXXXXXXXXXXX\" # 密码 (注意：这里的密码指的是授权码) EMAIL_USE_TLS = False # 一般都为False EMAIL_FROM = \"xxxx@163.com\" # 邮箱来自 一般和邮箱账号保持一致 ","date":"2021-09-08","objectID":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/:1:0","tags":["Django","Html"],"title":"Django发送邮箱验证码实现以及邮箱html模板","uri":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/"},{"categories":["Django"],"content":"2.邮箱配置 #登录邮箱-设置-POP3/SMTP/IMAP,开启服务，保存授权码，切记要保存，授权码就是密码 如图: ","date":"2021-09-08","objectID":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/:2:0","tags":["Django","Html"],"title":"Django发送邮箱验证码实现以及邮箱html模板","uri":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/"},{"categories":["Django"],"content":"3.代码部分 from django.core.mail import EmailMessage from django.template import loader def clean_email(self): email_title = \"验证码\" #这里是生成随机验证码 我是4位的，可以自定义 code = random.randrange(1000, 9999) #这个context这里定义的字段，是要给html模板中的验证码使用的，HTML中{% code %}引用即可 context = { 'code': str(code) } #这里的html文件就是发送验证码部分的html模板我放在下面 email_template_name = 'tools_email.html' t = loader.get_template(email_template_name) #发送html验证码到邮箱有三种方式，我觉得这种最方便，其他自行百度 html_content = t.render(context) email = self.cleaned_data['email'] #判断邮箱是否存在 exists = models.UserInfo.objects.filter(email=email).exists() if exists: msg = EmailMessage(email_title, # 邮件主题 html_content, # 邮件内容，使用html模板 settings.EMAIL_FROM, # 用于发送邮件的用户 [email] # 接收邮件的用户列表 ) #指定邮箱发送的类型 msg.content_subtype = 'html' #发送邮箱 send_status = msg.send() if not send_status: return ValidationError('发生邮箱失败,{}'.format(send_status['errmsg'])) #放到redis中，有效时长2min conn = get_redis_connection() conn.set(email, code, ex=120) return email return ValidationError('邮箱未注册') ","date":"2021-09-08","objectID":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/:3:0","tags":["Django","Html"],"title":"Django发送邮箱验证码实现以及邮箱html模板","uri":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/"},{"categories":["Django"],"content":"4.html模板 {% load static %} \u003chead\u003e \u003cmeta charset=\"utf-8\"\u003e \u003cbase target=\"_blank\"/\u003e \u003cstyle type=\"text/css\"\u003e::-webkit-scrollbar { display: none; }\u003c/style\u003e \u003cstyle id=\"cloudAttachStyle\" type=\"text/css\"\u003e#divNeteaseBigAttach, #divNeteaseBigAttach_bak { display: none; }\u003c/style\u003e \u003cstyle id=\"blockquoteStyle\" type=\"text/css\"\u003eblockquote { display: none; }\u003c/style\u003e \u003cstyle type=\"text/css\"\u003e body { font-size: 14px; font-family: arial, verdana, sans-serif; line-height: 1.666; padding: 0; margin: 0; overflow: auto; white-space: normal; word-wrap: break-word; min-height: 100px } td, input, button, select, body { font-family: Helvetica, 'Microsoft Yahei', verdana } pre { white-space: pre-wrap; white-space: -moz-pre-wrap; white-space: -pre-wrap; white-space: -o-pre-wrap; word-wrap: break-word; width: 95% } th, td { font-family: arial, verdana, sans-serif; line-height: 1.666 } img { border: 0 } header, footer, section, aside, article, nav, hgroup, figure, figcaption { display: block } blockquote { margin-right: 0px } \u003c/style\u003e \u003c/head\u003e \u003cbody tabindex=\"0\" role=\"listitem\"\u003e \u003ctable width=\"700\" border=\"0\" align=\"center\" cellspacing=\"0\" style=\"width:700px;\"\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd\u003e \u003cdiv style=\"width:700px;margin:0 auto;border-bottom:1px solid #ccc;margin-bottom:30px;\"\u003e \u003ctable border=\"0\" cellpadding=\"0\" cellspacing=\"0\" width=\"700\" height=\"39\" style=\"font:12px Tahoma, Arial, 宋体;\"\u003e \u003ctbody\u003e \u003ctr\u003e \u003ctd width=\"210\"\u003e\u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003c/div\u003e \u003cdiv style=\"width:680px;padding:0 10px;margin:0 auto;\"\u003e \u003cdiv style=\"line-height:1.5;font-size:14px;margin-bottom:25px;color:#4d4d4d;\"\u003e \u003cstrong style=\"display:block;margin-bottom:15px;\"\u003e尊敬的用户，您好：\u003cspan style=\"color:#f60;font-size: 16px;\"\u003e\u003c/span\u003e\u003c/strong\u003e \u003cstrong style=\"display:block;margin-bottom:15px;\"\u003e 您正在进行\u003cspan style=\"color: red\"\u003e修改密码\u003c/span\u003e操作，请在验证码输入框中输入：\u003cspan style=\"color:#f60;font-size: 24px\"\u003e{{ code }}\u003c/span\u003e，以完成操作。 \u003c/strong\u003e \u003c/div\u003e \u003cdiv style=\"margin-bottom:30px;\"\u003e \u003csmall style=\"display:block;margin-bottom:20px;font-size:12px;\"\u003e \u003cp style=\"color:#747474;\"\u003e 注意：验证码2分钟有效，此操作可能会修改您的密码。如非本人操作，请及时登录并修改密码以保证帐户安全 \u003cbr\u003e（工作人员不会向你索取此验证码，请勿泄漏！) \u003c/p\u003e \u003c/small\u003e \u003c/div\u003e \u003c/div\u003e \u003cdiv style=\"width:700px;margin:0 auto;\"\u003e \u003cdiv style=\"padding:10px 10px 0;border-top:1px solid #ccc;color:#747474;margin-bottom:20px;line-height:1.3em;font-size:12px;\"\u003e \u003cp\u003e此为系统邮件，请勿回复\u003cbr\u003e 请保管好您的邮箱，避免账号被他人盗用 \u003c/p\u003e \u003cp\u003eXXXXXXX QA团队\u003c/p\u003e \u003c/div\u003e \u003c/div\u003e \u003c/td\u003e \u003c/tr\u003e \u003c/tbody\u003e \u003c/table\u003e \u003c/body\u003e {% block js %}{% endblock %} ","date":"2021-09-08","objectID":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/:4:0","tags":["Django","Html"],"title":"Django发送邮箱验证码实现以及邮箱html模板","uri":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/"},{"categories":["Django"],"content":"5.效果图如下： ","date":"2021-09-08","objectID":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/:5:0","tags":["Django","Html"],"title":"Django发送邮箱验证码实现以及邮箱html模板","uri":"https://cywhat.cn/Django%E5%8F%91%E9%80%81%E9%82%AE%E7%AE%B1%E9%AA%8C%E8%AF%81%E7%A0%81%E5%AE%9E%E7%8E%B0%E4%BB%A5%E5%8F%8A%E9%82%AE%E7%AE%B1html%E6%A8%A1%E6%9D%BF/"},{"categories":["Mac"],"content":"1.首先关掉系统的自动更新设置** $ 1.系统偏好设置--软件更新 $ 2.取消选择\"自动保持我的Mac最新\" $ 3.高级--取消所有按钮勾选 ","date":"2021-09-07","objectID":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/:1:0","tags":["Mac"],"title":"Mac忽略系统更新提醒，并取消小红点","uri":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/"},{"categories":["Mac"],"content":"2.执行代码 以下操作需要在终端中进行 ","date":"2021-09-07","objectID":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/:2:0","tags":["Mac"],"title":"Mac忽略系统更新提醒，并取消小红点","uri":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/"},{"categories":["Mac"],"content":"1.忽略大版本更新 $ sudo softwareupdate --ignore \"macOS Catalina\" $ sudo softwareupdate --ignore \"macOS Mojave\" $ sudo softwareupdate --ignore \"macOS Big Sur\" ","date":"2021-09-07","objectID":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/:2:1","tags":["Mac"],"title":"Mac忽略系统更新提醒，并取消小红点","uri":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/"},{"categories":["Mac"],"content":"2.取消小红点 $ defaults write com.apple.systempreferences AttentionPrefBundleIDs 0 $ killall Dock ","date":"2021-09-07","objectID":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/:2:2","tags":["Mac"],"title":"Mac忽略系统更新提醒，并取消小红点","uri":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/"},{"categories":["Mac"],"content":"3.恢复更新提示 $ sudo softwareupdate --reset-ignored ","date":"2021-09-07","objectID":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/:2:3","tags":["Mac"],"title":"Mac忽略系统更新提醒，并取消小红点","uri":"https://cywhat.cn/Mac%E5%BF%BD%E7%95%A5%E7%B3%BB%E7%BB%9F%E6%9B%B4%E6%96%B0%E6%8F%90%E9%86%92%E5%B9%B6%E5%8F%96%E6%B6%88%E5%B0%8F%E7%BA%A2%E7%82%B9/"},{"categories":["Tampermonkey"],"content":"前景： 各大LM运营限制带宽速度，导致必须要成为尊贵的VIP客户才能勉强享受到自己的带宽 PS：我这里屎以chrome浏览器举例，其他不保证成功，可借鉴 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:0:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"1.Chrome浏览器下载Tampermonkey Tampermonkey 点击安装 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:1:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"2.安装脚本 直链脚本 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:2:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"3.下载Aira2GUI Mac版 验证码：qx7e Win版 验证码：5s6i ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:3:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"4.安装Aira2GUI #windows版本exe需要文件夹中允许，需要创建快捷方式请邮件，请勿直接拖拽 #mac版本解压完成将app存储到应用程序中即可 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:4:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"5.打开百度网盘，刷新页面 #刷新百度网盘页面，找到需要下载的文件勾选，选择页面上方出现的\"简易下载助手\" ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:5:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"6.生成直链 #首次生成需要关注公众号获取验证码 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:6:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"7.打开Aira2GUI，传递直链 ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:7:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Tampermonkey"],"content":"8.切换至Aira2GUI ","date":"2021-09-03","objectID":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/:8:0","tags":["Tampermonkey"],"title":"Tampermonkey+脚本+Aira2GUI直链下载百度网盘资源","uri":"https://cywhat.cn/Tampermonkey-%E8%84%9A%E6%9C%AC-Aira2GUI%E7%9B%B4%E9%93%BE%E4%B8%8B%E8%BD%BD%E7%99%BE%E5%BA%A6%E7%BD%91%E7%9B%98%E8%B5%84%E6%BA%90/"},{"categories":["Linux"],"content":"注意:ConterOS7.0以上使用的是firewall，ConterOS7.0以下使用的是iptables ","date":"2021-09-01","objectID":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/:0:0","tags":["Linux"],"title":"Linux关闭防火墙","uri":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"},{"categories":["Linux"],"content":"1.查看防火状态 $ systemctl status firewalld #7.0以上 $ service iptables status #7.0以下 ","date":"2021-09-01","objectID":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/:1:0","tags":["Linux"],"title":"Linux关闭防火墙","uri":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"},{"categories":["Linux"],"content":"2.暂时关闭防火墙 $ syatemctl stop firewalld #7.0以上 $ service iptables stop #7.0以下 ","date":"2021-09-01","objectID":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/:2:0","tags":["Linux"],"title":"Linux关闭防火墙","uri":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"},{"categories":["Linux"],"content":"3.永久关闭防火墙 $ systemctl disable firewalld #7.0以上 $ chkconfig iptables off #7.0以下 ","date":"2021-09-01","objectID":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/:3:0","tags":["Linux"],"title":"Linux关闭防火墙","uri":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"},{"categories":["Linux"],"content":"4.重启防火墙 $ systemctl enable firewalld #7.0以上 $ service iptables restart #7.0以下 ","date":"2021-09-01","objectID":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/:4:0","tags":["Linux"],"title":"Linux关闭防火墙","uri":"https://cywhat.cn/Linux%E5%85%B3%E9%97%AD%E9%98%B2%E7%81%AB%E5%A2%99/"},{"categories":["Jquery"],"content":"前提: 用django和jquery写的web应用,html页面js报错,信息如下: $ DJango Uncaught ReferenceError: $ is not defined 原因: js语法有问题,未识别为js语法 解决:需要引入jquery $ \u003cscript type=\"text/javascript\" src=\"../static/main/js/jquery-2.1.1.min.js\"\u003e\u003c/script\u003e #src后面加js文件路径 ","date":"2021-08-31","objectID":"https://cywhat.cn/DJango-Uncaught-ReferenceError-is-not-defined/:0:0","tags":["Django","Jquery"],"title":"DJango Uncaught ReferenceError: $ is not defined","uri":"https://cywhat.cn/DJango-Uncaught-ReferenceError-is-not-defined/"},{"categories":["Selenium"],"content":"报错: selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary 原因是: 运行脚本的环境中没有找到chrome浏览器 解决: windows/mac: 指定浏览器位置 $ chrome_path = r\"/Library/Frameworks/Python.framework/Versions/3.6/bin/chromedriver\" #mac地址 win自己更换路径即可 driver = webdriver.Chrome(chrome_path) linux: 安装chrome浏览器 Linux安装chrome浏览器 ","date":"2021-08-20","objectID":"https://cywhat.cn/selenium-common-exceptions-WebDriverException-Message-unknown-error-cannot-find-Chrome-binary/:0:0","tags":["Selenium","Linux"],"title":"selenium.common.exceptions.WebDriverException: Message: unknown error: cannot find Chrome binary","uri":"https://cywhat.cn/selenium-common-exceptions-WebDriverException-Message-unknown-error-cannot-find-Chrome-binary/"},{"categories":["Centos"],"content":"1.下载chrome for linux压缩包 百度网盘 $ 提取码: 1f4n 更多版本 ","date":"2021-08-20","objectID":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/:1:0","tags":["Centos","Linux"],"title":"Centos7安装chrome浏览器","uri":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"categories":["Centos"],"content":"2.上传解压压缩包 $ unzip google-chrome-stable_deb_rpm_91.0.4472.77.zip #解压完成会出现 .deb 和 .rpm 的俩个文件 ","date":"2021-08-20","objectID":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/:2:0","tags":["Centos","Linux"],"title":"Centos7安装chrome浏览器","uri":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"categories":["Centos"],"content":"3.安装解压chrome所需依赖包 $ yum install -y lsb yum install -y libXScrnSaver yum install -y liberation-fonts yum install -y libdbusmenu-gtk3 yum install epel-release ","date":"2021-08-20","objectID":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/:3:0","tags":["Centos","Linux"],"title":"Centos7安装chrome浏览器","uri":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"categories":["Centos"],"content":"4.安装chrome $ sudo rpm -ivh google-chrome-stable_current_x86_64.rpm ","date":"2021-08-20","objectID":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/:4:0","tags":["Centos","Linux"],"title":"Centos7安装chrome浏览器","uri":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"categories":["Centos"],"content":"5.启动服务 $ systemctl start atd.service ","date":"2021-08-20","objectID":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/:5:0","tags":["Centos","Linux"],"title":"Centos7安装chrome浏览器","uri":"https://cywhat.cn/Centos7%E5%AE%89%E8%A3%85chrome%E6%B5%8F%E8%A7%88%E5%99%A8/"},{"categories":["Linux"],"content":"前提:在Linux安装chrome的时候,报错缺少libvulkan.so.1()(64bit) 这个依赖 解决: $ sudo yum -y install vulkan-1.1.97.0-1.el7.x86_64 ","date":"2021-08-20","objectID":"https://cywhat.cn/libvulkan-so-1-64bit-%E7%BC%BA%E5%B0%91%E4%BE%9D%E8%B5%96/:0:0","tags":["Linux"],"title":"libvulkan.so.1()(64bit)缺少依赖","uri":"https://cywhat.cn/libvulkan-so-1-64bit-%E7%BC%BA%E5%B0%91%E4%BE%9D%E8%B5%96/"},{"categories":["Mysql"],"content":"好久没操作数据库语句,都快忘光了,记录一下 ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:0:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"1.连接数据库(mysql) $ mysql -h机器ip -u用户名 -p密码 ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:1:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"2.查看所有数据库 $ show databases; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:2:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"3.进入某个数据库 $ use xxx; # xxx为数据库名 ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:3:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"4.查看数据库中的表 $ show tables; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:4:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"4.查看数据库中的表 $ show tables; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:5:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"5.增 $ insert into 表名 ( field1, field2,...fieldN ) VALUES ( value1, value2,...valueN ); ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:6:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"6.删 $ delete from 表名 where 字段名=字段值; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:7:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"7.改 $ update 表名 set 字段名=字段值; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:8:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Mysql"],"content":"8.查 $ select * from 表名 where 字段名=字段值; ","date":"2021-08-18","objectID":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/:9:0","tags":["Mysql"],"title":"mysql连接以及增删改查语句","uri":"https://cywhat.cn/mysql%E8%BF%9E%E6%8E%A5%E4%BB%A5%E5%8F%8A%E5%A2%9E%E5%88%A0%E6%94%B9%E6%9F%A5%E8%AF%AD%E5%8F%A5/"},{"categories":["Hexo"],"content":"1.更改hexo配置文件 $ vim _config.yml #配置_config.yml里面的post_asset_folder:false 设置为 true 如图 ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:1:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"2.安装npm插件 $ npm install https://github.com/CodeFalling/hexo-asset-image --save ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:2:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"3.清除hexo缓存 $ hexo clean ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:3:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"4.创建新的文章 hexo new \"XXA\" #创建完文章后,会发现 _post 目录下多出一个XXA的文件夹,把图片放入该文件夹中 ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:4:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"5.然后文章中引入图片 $ {% asset_img img7.png This is an image %} #img7.png为你的图片名称,不可重复 This is an image是图片介绍 ps:唯一的缺点就是 预览的时候看不见图片 需要重新发布 ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:5:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"6.重新发布 $ hexo d -g 如果以上操作未生效，图片还不显示，进行以下操作： ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:6:0","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"1.打开/node_modules/hexo-asset-image/index.js $ vim /node_modules/hexo-asset-image/index.js ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:6:1","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"2.替换以下内容(建议备份原index.js文件) 'use strict'; var cheerio = require('cheerio'); // http://stackoverflow.com/questions/14480345/how-to-get-the-nth-occurrence-in-a-string function getPosition(str, m, i) { return str.split(m, i).join(m).length; } var version = String(hexo.version).split('.'); hexo.extend.filter.register('after_post_render', function (data) { var config = hexo.config; if (config.post_asset_folder) { var link = data.permalink; if (version.length \u003e 0 \u0026\u0026 Number(version[0]) == 3) var beginPos = getPosition(link, '/', 1) + 1; else var beginPos = getPosition(link, '/', 3) + 1; // In hexo 3.1.1, the permalink of \"about\" page is like \".../about/index.html\". var endPos = link.lastIndexOf('/') + 1; link = link.substring(beginPos, endPos); var toprocess = ['excerpt', 'more', 'content']; for (var i = 0; i \u003c toprocess.length; i++) { var key = toprocess[i]; var $ = cheerio.load(data[key], { ignoreWhitespace: false, xmlMode: false, lowerCaseTags: false, decodeEntities: false }); $('img').each(function () { if ($(this).attr('src')) { // For windows style path, we replace '\\' to '/'. var src = $(this).attr('src').replace('\\\\', '/'); if (!/http[s]*.*|\\/\\/.*/.test(src) \u0026\u0026 !/^\\s*\\//.test(src)) { // For \"about\" page, the first part of \"src\" can't be removed. // In addition, to support multi-level local directory. var linkArray = link.split('/').filter(function (elem) { return elem != ''; }); var srcArray = src.split('/').filter(function (elem) { return elem != '' \u0026\u0026 elem != '.'; }); if (srcArray.length \u003e 1) srcArray.shift(); src = srcArray.join('/'); $(this).attr('src', config.root + link + src); console.info \u0026\u0026 console.info(\"update link as:--\u003e\" + config.root + link + src); } } else { console.info \u0026\u0026 console.info(\"no src attr, skipped...\"); console.info \u0026\u0026 console.info($(this)); } }); data[key] = $.html(); } } }); ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:6:2","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Hexo"],"content":"3.然后清空缓存，再次发布 $ hexo clean $ hexo d -g ","date":"2021-08-18","objectID":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/:6:3","tags":["Hexo"],"title":"解决hexo图片不展示问题","uri":"https://cywhat.cn/%E8%A7%A3%E5%86%B3hexo%E5%9B%BE%E7%89%87%E4%B8%8D%E5%B1%95%E7%A4%BA%E9%97%AE%E9%A2%98/"},{"categories":["Newman"],"content":"PS:运行newman需要node 版本大于10 ","date":"2021-08-18","objectID":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/:0:0","tags":["Postman","Newman","Jenkins"],"title":"newman生成好看的html报告","uri":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/"},{"categories":["Newman"],"content":"1.安装newman $ npm install -g newman ","date":"2021-08-18","objectID":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/:1:0","tags":["Postman","Newman","Jenkins"],"title":"newman生成好看的html报告","uri":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/"},{"categories":["Newman"],"content":"2.安装普通html报告插件(建议安装) $ npm install -g newman-reporter-html ","date":"2021-08-18","objectID":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/:2:0","tags":["Postman","Newman","Jenkins"],"title":"newman生成好看的html报告","uri":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/"},{"categories":["Newman"],"content":"3.安装美化html插件 $ npm install -g newman-reporter-htmlextra ","date":"2021-08-18","objectID":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/:3:0","tags":["Postman","Newman","Jenkins"],"title":"newman生成好看的html报告","uri":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/"},{"categories":["Newman"],"content":"4.newman命令详解 $ newman run SX.postman_collection.json -e environment.json -r htmlextra,cli --reporter-htmlextra-title \"实训平台接口 测试报告\" --reporter-htmlextra-browserTitle \"实训平台接口报告\" --reporter-htmlextra-export Bapi.html #参数解释: run 后面跟接口脚本json格式的文件 -e 后面添加环境变量 -r 指定生成的报告格式 --reporter-htmlextra-title 指定生成的报告title --reporter-htmlextra-browserTitle 指定生成的浏览器title --reporter-htmlextra-export 指定生成的html文件名和路径 ","date":"2021-08-18","objectID":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/:4:0","tags":["Postman","Newman","Jenkins"],"title":"newman生成好看的html报告","uri":"https://cywhat.cn/newman%E7%94%9F%E6%88%90%E5%A5%BD%E7%9C%8B%E7%9A%84html%E6%8A%A5%E5%91%8A/"},{"categories":["Linux"],"content":"在使用 sed -e 批量替换命令时候,报错如下: $ \"sed: -e expression #1, char 24: unknown option to `s` \" 原因: $ 需要替换的内容中有符号,且该符号和你用来分割的符号一样,所以该条命令无法使用,详情如下图: 也就是说如果你需要替换的内容中存在 | 那么你的命令中用来分割的符号就需要使用 @ 或者 \\ 否则就会报错 ","date":"2021-08-17","objectID":"https://cywhat.cn/sed-e-expression-1-char-24-unknown-option-to-s/:0:0","tags":["Linux","Sed"],"title":"sed: -e expression #1, char 24: unknown option to 's' ","uri":"https://cywhat.cn/sed-e-expression-1-char-24-unknown-option-to-s/"},{"categories":["Hexo"],"content":"hexo d -g 突然部署失败,报错如下: $ fatal: unable to access 'https://github.com/xxxxx/xxxx.git/': The requested URL returned error: 403 err: Error: Spawn failed at ChildProcess.\u003canonymous ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:0:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Hexo"],"content":"1.更改hexo配置文件中的git镜像映射地址 $ vim _config.yml #将https的地址更改为git开头的地址,如图 ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:1:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Hexo"],"content":"2.检查发布机器和github之间的公私钥是否配对 ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:2:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Hexo"],"content":"3.hexo清楚缓存 $ hexo clean ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:3:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Hexo"],"content":"4.重新发布 $ hexo d -g ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:4:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Hexo"],"content":"5.发布成功 ","date":"2021-08-17","objectID":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/:5:0","tags":["Hexo"],"title":"hexo d -g 部署失败","uri":"https://cywhat.cn/hexo-d-g-%E9%83%A8%E7%BD%B2%E5%A4%B1%E8%B4%A5/"},{"categories":["Node"],"content":"1.安装n $ npm install -g n ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:1:0","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"2.使用 n 下载所需node $ n 10.16.3 #版本号 不需要加v ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:2:0","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"下载最新版本 $ n latest ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:2:1","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"删除某个版本 $ n rm 10.16.3 #版本号 不需要加v ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:2:2","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"查看已安装版本 $ n ls ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:2:3","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"3.新安装的node版本,需要使用ls切换 $ n ls 10.16.3 #会出现所安装的所有node版本,使用版本在最上方 ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:3:0","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Node"],"content":"4.查看node版本 $ node -v ","date":"2021-08-17","objectID":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:4:0","tags":["Node"],"title":"node切换版本","uri":"https://cywhat.cn/node%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Hexo"],"content":"怎么让百度和谷歌收录你的博客(仅仅局限于拥有自己域名的个人博客使用) 收录的好处: 被搜索引擎收录后，别人就可以通过搜索引擎搜索到你的文章 ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:0:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Hexo"],"content":"百度: $ https://ziyuan.baidu.com/linksubmit/url ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:1:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Hexo"],"content":"谷歌 $ https://search.google.com/search-console/welcome #需要登录Google账号 ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:2:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Hexo"],"content":"360搜索 $ https://info.so.360.cn/site_submit.html #需要提交备案信息 ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:3:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Hexo"],"content":"必应 $ https://www.bing.com/webmasters/about #验证方式xml meta dns ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:4:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Hexo"],"content":"搜狗 $ https://zhanzhang.sogou.com/?forceredirect=1# #需要登录验证 ","date":"2021-07-23","objectID":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/:5:0","tags":["Google","Hexo"],"title":"怎么让你的个人博客可以在百度谷歌搜索到","uri":"https://cywhat.cn/%E6%80%8E%E4%B9%88%E8%AE%A9%E4%BD%A0%E7%9A%84%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2%E5%8F%AF%E4%BB%A5%E5%9C%A8%E7%99%BE%E5%BA%A6%E8%B0%B7%E6%AD%8C%E6%90%9C%E7%B4%A2%E5%88%B0/"},{"categories":["Shadowrocket"],"content":"国内外划分+广告过滤 $ https://raw.githubusercontent.com/chaoyangya/cywhat-block-ad/master/cywhat-block-ad.conf ","date":"2021-07-20","objectID":"https://cywhat.cn/Shadowrocket%E5%B0%8F%E7%81%AB%E7%AE%AD%E9%85%8D%E7%BD%AE%E8%A7%84%E5%88%99%E6%96%87%E4%BB%B6/:1:0","tags":["Shadowrocket"],"title":"Shadowrocket小火箭配置规则文件","uri":"https://cywhat.cn/Shadowrocket%E5%B0%8F%E7%81%AB%E7%AE%AD%E9%85%8D%E7%BD%AE%E8%A7%84%E5%88%99%E6%96%87%E4%BB%B6/"},{"categories":["Shadowrocket"],"content":"黑名单(国内外划分无广告过滤) $ https://raw.githubusercontent.com/chaoyangya/cywhat-block-ad/master/cywhat-no-block-ad.conf ","date":"2021-07-20","objectID":"https://cywhat.cn/Shadowrocket%E5%B0%8F%E7%81%AB%E7%AE%AD%E9%85%8D%E7%BD%AE%E8%A7%84%E5%88%99%E6%96%87%E4%BB%B6/:2:0","tags":["Shadowrocket"],"title":"Shadowrocket小火箭配置规则文件","uri":"https://cywhat.cn/Shadowrocket%E5%B0%8F%E7%81%AB%E7%AE%AD%E9%85%8D%E7%BD%AE%E8%A7%84%E5%88%99%E6%96%87%E4%BB%B6/"},{"categories":["Java"],"content":"jstack报错如下 $ -bash: jstack: 未找到命令 ","date":"2021-07-20","objectID":"https://cywhat.cn/bash-jstack-%E6%9C%AA%E6%89%BE%E5%88%B0%E5%91%BD%E4%BB%A4/:1:0","tags":["Java"],"title":"bash:jstack: 未找到命令","uri":"https://cywhat.cn/bash-jstack-%E6%9C%AA%E6%89%BE%E5%88%B0%E5%91%BD%E4%BB%A4/"},{"categories":["Java"],"content":"安装以下依赖 $ yum install java-1.7.0-openjdk-devel -y ","date":"2021-07-20","objectID":"https://cywhat.cn/bash-jstack-%E6%9C%AA%E6%89%BE%E5%88%B0%E5%91%BD%E4%BB%A4/:2:0","tags":["Java"],"title":"bash:jstack: 未找到命令","uri":"https://cywhat.cn/bash-jstack-%E6%9C%AA%E6%89%BE%E5%88%B0%E5%91%BD%E4%BB%A4/"},{"categories":["Java"],"content":"top 查看占用资源信息以及pid $ top ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:1:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Java"],"content":"查看pid下绑定线程 $ top -Hp pid1(进程id) ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:2:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Java"],"content":"拿到需要查询的线程pid,转换成16进制 $ printf '%x' pid2(线程id) ==\u003e 6a4 #6a4为输出结果 ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:3:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Java"],"content":"通过jstack讲java信息输出到文本 $ jstack pid1(进程id) \u003e t.txt 如果jstack报错,请查看 jstack不存在 ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:4:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Java"],"content":"在t.txt文件中查找6a4 $ vim t.txt $ /6a4 ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:5:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Java"],"content":"然后找到自己的collectorl业务代码层具体行数去分析 ","date":"2021-07-20","objectID":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/:6:0","tags":["Java"],"title":"Java线上问题排查","uri":"https://cywhat.cn/Java%E7%BA%BF%E4%B8%8A%E9%97%AE%E9%A2%98%E6%8E%92%E6%9F%A5/"},{"categories":["Npm"],"content":"Npm切换版本 npm需要切换版本如果没有安装nvm很头疼,会存在以下三种情况: ① Node环境还在,只是Npm被卸载 ② Npm和Node版本不兼容 ③ 存在多个Npm版本,无法切换 PS:如果存在以上三种情况的,强烈建议,直接Nvm重新装Node,简单粗暴 ","date":"2021-07-14","objectID":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:0:0","tags":["Npm","Node"],"title":"npm切换版本","uri":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Npm"],"content":"卸载Node $ nvm uninstall vx.x.x ","date":"2021-07-14","objectID":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:1:0","tags":["Npm","Node"],"title":"npm切换版本","uri":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Npm"],"content":"安装指定Node版本 $ nvm install vx.x.x ","date":"2021-07-14","objectID":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:2:0","tags":["Npm","Node"],"title":"npm切换版本","uri":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Npm"],"content":"查看Node/Npm版本 $ node -v $ npm -v ","date":"2021-07-14","objectID":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/:3:0","tags":["Npm","Node"],"title":"npm切换版本","uri":"https://cywhat.cn/npm%E5%88%87%E6%8D%A2%E7%89%88%E6%9C%AC/"},{"categories":["Npm"],"content":"#使用nvm卸载node版本时报错如下: $ nvm: Cannot uninstall currently-active node version, vx.x.x (inferred from x.x.x) ","date":"2021-07-14","objectID":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/:0:0","tags":["Nvm","Node","Npm"],"title":"nvm: Cannot uninstall currently-active node version, vx.x.x (inferred from x.x.x)","uri":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/"},{"categories":["Npm"],"content":"需要先退出已经使用的node环境 $ nvm deactivate ","date":"2021-07-14","objectID":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/:1:0","tags":["Nvm","Node","Npm"],"title":"nvm: Cannot uninstall currently-active node version, vx.x.x (inferred from x.x.x)","uri":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/"},{"categories":["Npm"],"content":"然后再执行卸载命令 $ nvm uninstall vx.x.x ","date":"2021-07-14","objectID":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/:2:0","tags":["Nvm","Node","Npm"],"title":"nvm: Cannot uninstall currently-active node version, vx.x.x (inferred from x.x.x)","uri":"https://cywhat.cn/nvm-Cannot-uninstall-currently-active-node-version-vx-x-x-inferred-from-x-x-x/"},{"categories":["Hexo"],"content":"注意该方法利用插件更改配置,如主题中有Google字体导致加载缓慢,请移步其他内容 利用插件 hexo-all-minifier 安装插件 $ npm install hexo-all-minifier --save 如果安装失败,请使用cnpm $ cnpm install hexo-all-minifier --save 更改Hexo配置 $ vim _config.yml 加入如下配置: #启用all_minifier all_minifier: true # html压缩 html_minifier: enable: true ignore_error: false exclude: # css压缩 css_minifier: enable: true exclude: - '*.min.css' # js压缩 js_minifier: enable: true mangle: true compress: exclude: - '*.min.js' js_concator: enable: false bundle_path: '/js/bundle.js' front: false silent: false # 图片优化 image_minifier: enable: true interlaced: false multipass: false optimizationLevel: 2 pngquant: false progressive: false 重新发布 $ hexo d -g ","date":"2021-07-14","objectID":"https://cywhat.cn/hexo%E4%BC%98%E5%8C%96%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6/:0:0","tags":["Hexo"],"title":"hexo优化加载速度","uri":"https://cywhat.cn/hexo%E4%BC%98%E5%8C%96%E5%8A%A0%E8%BD%BD%E9%80%9F%E5%BA%A6/"},{"categories":["Hexo"],"content":"部署过程需要用到一些Linux命令,且本文部署操作机为Mac,如是Windows不保证能100%成功噢 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:0:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"部署准备 操作机: Mac(iterm) Git: 创建好个人项目(Public) #注意这里项目命名 XX.github.io.git Netlify: 注册好自己的项目和团队 Hexo: 5.4.0 Node: 15.12.0(注意Node版本) PS:以上软件自行安装 安装步骤 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:1:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"1.安装Hexo $ npm install -g hexo-cli ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:2:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"2.初始化博客文件夹 $ hexo init blog #(blog可根据自己情况更改) ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:3:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"3.安装node_moudles $ cd blog $ npm install ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:4:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"4.blog目录详解 node_modules: node依赖包 public: 存放生成的页面 scaffolds: 生成文章的一些模板 source: 存放文章 themes: 主题 _config.yml: 博客的配置文件 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:5:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"5.本地启动Hexo $ hexo s #(默认为4000端口) ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:6:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"6.hexo新建文章发布步骤 hexo clean #清理静态文件和缓存数据 hexo new \"新文章\" hexo g #生成静态数据(按日期归类的文件夹/html等) hexo s #本地启动hexo ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:7:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"7.安装git部署插件 $ npm install hexo-deployer-git --save ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:8:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"8.修改hexo配置文件,关联git地址 $ vim _config.yml deploy: type: git repo: https://github.com/chaoyangya/chaoyangya.github.io.git branch: master ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:9:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"9.第一次提交代码 $ git init #初始化项目文件夹 $ git add . #将所有文件添加到暂存区 $ git commit -m \"first commit\" #提交到本地仓库，双引号内是提交的备注信息 $ git remote add origin https://github.com/chaoyangya/chaoyangya.github.io.git $ git pull #拉取远程主分支信息，首次拉取合并信息 $ git push -u -f origin master #提交到远程仓库，这个命令中的 -f 是强制推送，因为远程仓库只有初始化的文件，所以强制推送上去就行了，不加-f 会报当前分支没有远程分支，强制推送可以覆盖master，这样就完成了第一次提交的步骤) 10.将hexo内容部署到生产环境 $ hexo d -g ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:10:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"11.关联Netlify 登录Netlify建议使用github账号登录,会方便很多 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:11:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"12.关联git仓库和分支 登录之后点击醒目的绿色的New site fomr Git按钮来新建站点并选取刚刚创建的仓库： ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:12:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"13.部署 点击完Deploy site之后，Netlify 会自动构建并发布你的网站内容，最重要的是Netlify支持分支部署和部署预览，这样可以提高开发效率，降低发布风险和成本。当我还没有打完这行字，Netlify已经完成网站的发布了，它会提供一个由随机字符串组成且以 .netlify.com 为后缀结尾的网站供你访问. ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:13:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"14.关联个人域名(如果不是从Netlify购入域名,需要将域名DNS指向Netlify) 选择Add domain alias添加个人域名,这里Netlify会默认给你新添加的域名多加一个重定向的www网址 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:14:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"15.开启Https Netlify免费提供SSL证书,支持添加自己的SSL,需要新增三个证书.或者将自己域名的CNAME记录类型指向你的.com结尾的域名也可以 添加好之后等一会就可以通过你的域名来访问了 注意 推荐使用各个代码编辑器(大多数支持Markdown),方便快捷 ","date":"2021-07-12","objectID":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/:15:0","tags":["Hexo","Netlify","Git"],"title":"hexo+netlify+git+个人域名搭建博客","uri":"https://cywhat.cn/hexo-netlify-git-%E4%B8%AA%E4%BA%BA%E5%9F%9F%E5%90%8D%E6%90%AD%E5%BB%BA%E5%8D%9A%E5%AE%A2/"},{"categories":["Hexo"],"content":"因为每次新建文章都需要自己新增字段,所以就找到了修改新建文章的默认字段所在地,果然社会的进步跟人的偷懒也不是毫无关系(啊哈哈哈) 默认使用命令新建只有 title date tags 我是把 categories 也加上了 修改项目根目录下scaffolds中的post模板即可,如下: --- title: {{ title }} date: {{ date }} tags: categories: --- 然后在新建文章的时候就有了categories字段 ","date":"2021-07-09","objectID":"https://cywhat.cn/hexo%E4%BF%AE%E6%94%B9%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%AD%97%E6%AE%B5/:0:0","tags":["Hexo"],"title":"hexo修改新建文章的默认字段","uri":"https://cywhat.cn/hexo%E4%BF%AE%E6%94%B9%E6%96%B0%E5%BB%BA%E6%96%87%E7%AB%A0%E7%9A%84%E9%BB%98%E8%AE%A4%E5%AD%97%E6%AE%B5/"},{"categories":["Hexo"],"content":"hexo删除文章 直接删除 “_posts” 中的 .md 结尾的文件 执行 $ hexo d -g ","date":"2021-07-08","objectID":"https://cywhat.cn/hexo%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0/:0:0","tags":["Hexo"],"title":"hexo删除文章","uri":"https://cywhat.cn/hexo%E5%88%A0%E9%99%A4%E6%96%87%E7%AB%A0/"},{"categories":["Hexo"],"content":"1 hexo多个标签应该遵循 list 格式,如下 title: XXX date: 2021-04-07 17:39:32 tags: [标签1,标签2] ","date":"2021-07-08","objectID":"https://cywhat.cn/hexo%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE/:1:0","tags":["Hexo"],"title":"hexo管理多个标签","uri":"https://cywhat.cn/hexo%E7%AE%A1%E7%90%86%E5%A4%9A%E4%B8%AA%E6%A0%87%E7%AD%BE/"},{"categories":["Supervisord"],"content":"解决部署的一些项目,因机器关机/重启导致项目需要手动重新启动的问题 ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:0:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"1 `安装supervisor yum安装 $ yum install supervisor pip安装 $ pip install supervisor easy_install安装 $ easy_install supervisor ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:1:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"2 `配置supervisor #生成配置supervisor文件 $ echo_supervisord_conf \u003e /etc/supervisord.conf #创建存放配置文件目录 $ mkdir -p /etc/supervisord.d/conf ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:2:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"3 `修改默认配置 #文件最后一行,目录修改为配置文件地址,我的.ini文件是在/etc/supervisord.d/conf/存放,而且本身配置文件也在etc中,所以目录直接写supervisord.d/conf/就可以了 $ [include] $ files = supervisord.d/conf/*.ini ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:3:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"4 `通过配置文件启动supervisor #这里一定要用配置文件的绝对路径 $ supervisord -c /etc/supervisord.conf ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:4:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"5 `编写要管理进程的配置文件 #因为我这里配置文件中通配符是以.ini结尾 所以新建的文件后缀为.ini $ touch my_uwsgi.ini #配置如下 $ [program:uwsgi] #uwsgi这个名称是管理进程的别名,可以自定义 user=root #启动用户 command=/root/pyenv/myenv/bin/uwsgi --ini /root/pyenv/myenv/my_uwsgi.ini #启动的命令 directory=/root/pyenv/myenv #文件目录 autostart=true #是否跟随supervisor启动 autorestart=true #程序故障是否重启 stopasgroup=true # startsecs=3 #启动3s后无异常判断为正常 startretries=3 #启动尝试次数 redirect_stderr=true #把stderr重定向到stdout,默认为flase stdout_logfile=/var/log/uwsgi_out.log #标准输出日志路径 这里一定要把uwsgi本身的日志输出关掉 stderr_logfile=/var/log/uwsgi_err.log #输出错误日志路径 ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:5:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"6 `启动应用 #重启supervisor配置中的所有程序 $ supervisorctl reload #查看supervisor状态 出现启动项目name即可 $ supervisorctl status ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:6:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"7 `supervisor命令详解 $ supervisorctl restart \u003capplication name\u003e #重启指定应用 $ supervisorctl stop \u003capplication name\u003e #停止指定应用 $ supervisorctl start \u003capplication name\u003e #启动指定应用 $ supervisorctl restart all #重启所有应用 $ supervisorctl stop all #停止所有应用 $ supervisorctl start all #启动所有应用 $ supervisorctl update #配置文件修改后可以使用该命令加载新的配置 $ supervisorctl reload #重新启动配置中的所有程序 ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:7:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Supervisord"],"content":"注意事项 使用supervisorctl status查看发现有进程被不断重启,报错如下: XXX(项目名) FATAL Exited too quickly (process log may have details) 原因: supervisor只支持前台程序的托管到后台(启动前需要kill掉已经存在的进程),例如: #uwsgi uwsgi如果出现不断重启,一定是启动命令中加了-d的参数,去掉就好了 #redis redis就需要把redis.conf配置文件中的daemonize设置为no #nginx nginx就需要在命令行后缀增加 -g ‘daemon off;’ #mongodb mongodb如果不断重启,多半也是因为启动命令中加了后台运行的参数 \u0026 同样的去掉就可以了 ","date":"2021-05-24","objectID":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/:8:0","tags":["Supervisord","Linux"],"title":"supervisord管理常驻进程uwsgi/nginx/redis/mongodb","uri":"https://cywhat.cn/supervisord%E7%AE%A1%E7%90%86%E5%B8%B8%E9%A9%BB%E8%BF%9B%E7%A8%8Buwsgi-nginx-redis-mongodb/"},{"categories":["Nginx"],"content":" $ server { listen 80; server_name xx.cn; #域名1 location / { proxy_pass http://x.x.x.x:9001; #域名1需要映射到80端口的服务端口 } } server { listen 80; server_name xx.cn; #域名2 location / { proxy_pass http://xx.xx.xx.xx:7300; #域名2需要映射到80端口的服务端口 } } ","date":"2021-04-16","objectID":"https://cywhat.cn/nginx%E5%A4%9A%E4%B8%AA%E7%AB%AF%E5%8F%A3/:0:0","tags":["Nginx","Linux"],"title":"nginx解决多个端口映射80的配置","uri":"https://cywhat.cn/nginx%E5%A4%9A%E4%B8%AA%E7%AB%AF%E5%8F%A3/"},{"categories":["Nginx"],"content":"注意: 俩个server服务要相对独立，这样就可以同时将服务1和服务2的端口映射到80端口了 ","date":"2021-04-16","objectID":"https://cywhat.cn/nginx%E5%A4%9A%E4%B8%AA%E7%AB%AF%E5%8F%A3/:0:1","tags":["Nginx","Linux"],"title":"nginx解决多个端口映射80的配置","uri":"https://cywhat.cn/nginx%E5%A4%9A%E4%B8%AA%E7%AB%AF%E5%8F%A3/"},{"categories":["Easy_mock"],"content":"前期准备： 1、Linux：CentOS Linux release 7.8.2003 (Core) 2、mongodb：3.4.24 3、redis：4.0.14 4、node：8.9.0 PS： node版本不要超过8.x.x mongodb版本不要超过3.6.x ","date":"2021-04-16","objectID":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/:0:0","tags":["Easy_mock","Linux"],"title":"Linux部署easy_mock","uri":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/"},{"categories":["Easy_mock"],"content":"mongodb安装 $ cd /usr/local/ #下载mongodb包 $ curl -O https://fastdl.mongodb.org/linux/mongodb-linux-x86_64-3.4.24.tgz #解压 $ tar -zxvf mongodb-linux-x86_64-3.4.24.tgz #重命名mongodb $ mv mongodb-linux-x86_64-3.4.24 mongodb #编辑环境变量 $ vi ~/.bashrc #环境变量 $ export MONGO_HOME=/usr/local/mongodb $ export PATH=$MONGO_HOME/bin:$PATH #让环境变量生效 $ source ~/.bashrc 安装好mongodb以后创建mongodb数据存放目录和日志存放目录 ## 创建数据目录 $ cd /root/ $ mkdir -p /mongodb/data $ mkdir -p /mongodb/log/ 启动mongodb(并保持后台运行) #后台启动mongodb $ mongod --dbpath=/root/mongodb/data --logpath=/root/mongodb/log/mongodb.log --logappend \u0026 解释： --fork 后台运行 --dbpath 数据存放目录 --logpath 日志存放目录 --logappend 防止日志被删除 ","date":"2021-04-16","objectID":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/:1:0","tags":["Easy_mock","Linux"],"title":"Linux部署easy_mock","uri":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/"},{"categories":["Easy_mock"],"content":"redis安装 #下载redis包 $ wget http://download.redis.io/releases/redis-4.0.14.tar.gz #解压 $ tar -xvzf redis-4.0.14.tar.gz #重命名 $ mv redis-4.0.14 redis $ cd redis-4.0.14/ #安装gcc依赖 $ yum -y install gcc #编译 $ make # 如报错可使用命令 $ make MALLOC=libc #拷贝执行程序到bin $ cp src/redis-server /usr/local/bin/ $ cp src/redis-cli /usr/local/bin/ #编辑redis配置文件 $ vi redis.conf 修改daemonize=no为yes，保存 #启动redis并保持后台运行 $ redis-server redis.conf \u0026 ","date":"2021-04-16","objectID":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/:2:0","tags":["Easy_mock","Linux"],"title":"Linux部署easy_mock","uri":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/"},{"categories":["Easy_mock"],"content":"安装node $ cd /usr/local/ #安装wget $ yum install -y wget #wget下载node包 $ wget https://npm.taobao.org/mirrors/node/v8.9.0/node-v8.9.0-linux-x64.tar.xz #解压安装 $ tar -zxvf node-v8.9.0-linux-x64.tar #重命名node文件 $ mv node-v8.9.0 node # 修改环境变量 $ vi ~/.bashrc #环境变量 $ export NODE_HOME=/usr/local/node $ export PATH=${PATH}:$NODE_HOME/bin #让环境变量生效 $ source ~/.bashrc #查看node版本 $ node -v ","date":"2021-04-16","objectID":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/:3:0","tags":["Easy_mock","Linux"],"title":"Linux部署easy_mock","uri":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/"},{"categories":["Easy_mock"],"content":"安装easy_mock #安装git $ yum install -y git #下载easymock包 $ git clone https://github.com/easy-mock/easy-mock.git #进入文件夹 $ cd easy-mock #安装 $ npm install #安装较慢，可以多试几次。也可以使用cnpm安装，需要先执行命令 $ npm install -g cnpm --registry=https://registry.npm.taobao.org #然后在执行 $ cnpm install #关闭防火墙 $ systemctl stop firewalld.service(这里如果是阿里云服务器需要安全组给7300端口放行) #安装pm2 守护进程 $ npm install -g pm2 #编译 $ npm run build #启动 $ NODE_ENV=production pm2 start app.js 注意这里如果是Windows系统前面需要加cross-env 反之mac或者linux不需要 #如启动报错File ecosystem config.js not found $ pm2 ecosystem 然后在重新运行即可 #运行 $ npm run start 疑难杂症 #如遇无法登录注册，js报错net::ERR_CONNECTION_REFUSED 说明你的mongodb有问题，可能是没有后台运行导致，查看mongodb状态即可 #最后的最后，作为重度强迫症患者，必须要把下载到/usr/local/中的包删除掉 $ rm -rf mongodb-linux-x86_64-3.4.24.tgz redis-4.0.14.tar.gz node-v8.9.0-linux-x64.tar 如报错如下图 #先修改easy_mock/config目录下的default.json { \"port\": 7300, \"host\": \"0.0.0.0\", \"pageSize\": 30, \"proxy\": false, \"db\": \"mongodb://127.0.0.1/easy-mock\", 这里要把mongodb更改为127.0.0.1 \"unsplashClientId\": \"\", } #然后重新build $ npm run build #启动app $ NODE_ENV=production pm2 start app ","date":"2021-04-16","objectID":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/:4:0","tags":["Easy_mock","Linux"],"title":"Linux部署easy_mock","uri":"https://cywhat.cn/Linux%E9%83%A8%E7%BD%B2easy-mock/"},{"categories":["Node"],"content":"1、安装nvm $ curl -o- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash 或者 $ wget -qO- https://raw.githubusercontent.com/nvm-sh/nvm/v0.35.2/install.sh | bash 2、nvm会自己添加环境变量，但是需要我们手动让环境变量生效 $ source ~/.bashrc ps：如果没有环境变量，需要手动添加： $ export NVM_DIR=\"$([ -z \"${XDG_CONFIG_HOME-}\" ] \u0026\u0026 printf %s \"${HOME}/.nvm\" || printf %s \"${XDG_CONFIG_HOME}/nvm\")\" [ -s \"$NVM_DIR/nvm.sh\" ] \u0026\u0026 \\. \"$NVM_DIR/nvm.sh\" # This loads nvm 3、nvm安装指定版本node $ nvm install v8.9.0 4、切换node版本 $ nvm use v8.9.0 5、查看node版本 $ node -v ","date":"2021-04-07","objectID":"https://cywhat.cn/Linux%E7%AE%A1%E7%90%86node%E7%89%88%E6%9C%AC/:0:0","tags":["Linux","Node"],"title":"Linux管理node版本","uri":"https://cywhat.cn/Linux%E7%AE%A1%E7%90%86node%E7%89%88%E6%9C%AC/"},{"categories":["Git"],"content":"原因：git本地运行有缓存，需要清楚git缓存即可 $ git rm -r --cached . ","date":"2021-04-01","objectID":"https://cywhat.cn/gitignore%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/:0:0","tags":["Git",".gitignore"],"title":".gitignore不生效的解决方案","uri":"https://cywhat.cn/gitignore%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"categories":["Git"],"content":"注意： 清完缓存需要把代码推到远程仓库 ","date":"2021-04-01","objectID":"https://cywhat.cn/gitignore%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/:1:0","tags":["Git",".gitignore"],"title":".gitignore不生效的解决方案","uri":"https://cywhat.cn/gitignore%E4%B8%8D%E7%94%9F%E6%95%88%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"},{"categories":["Git"],"content":"git 进入了编辑模式 用以下命令即可解决： $ git config --global core.pager mor ","date":"2021-04-01","objectID":"https://cywhat.cn/git-branch%E5%87%BA%E7%8E%B0end%E9%9C%80%E8%A6%81q%E6%89%8D%E8%83%BD%E9%80%80%E5%87%BA/:0:0","tags":["Git"],"title":"git branch出现end需要q才能退出","uri":"https://cywhat.cn/git-branch%E5%87%BA%E7%8E%B0end%E9%9C%80%E8%A6%81q%E6%89%8D%E8%83%BD%E9%80%80%E5%87%BA/"},{"categories":["Nginx"],"content":"我的需求是这样的，nginx+uwsgi启动的web服务，访问域名XX.CN之后，nginx报错404，我需要实现的是访问XX.CN，自动映射到XX.CN/login 因为我server是80端口，所以不需要加端口即可访问 nginx配置如下： $ vim nginx.conf 在你启动的server中加入如下配置 if ( $request_uri = \"/\" ) { rewrite \"/\" http://XX.CN/login break; } 然后现在去访问XX.CN 就会映射到 XX.CN/login 大功告成！！！ ","date":"2021-04-01","objectID":"https://cywhat.cn/nginx%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0ip%E8%AE%BF%E9%97%AE%E6%8C%87%E5%AE%9AURL/:0:0","tags":["Nginx"],"title":"nginx配置实现ip访问指定URL","uri":"https://cywhat.cn/nginx%E9%85%8D%E7%BD%AE%E5%AE%9E%E7%8E%B0ip%E8%AE%BF%E9%97%AE%E6%8C%87%E5%AE%9AURL/"},{"categories":["Django"],"content":"出现上述问题是django没有django_session表 错误跟Session的机制相关 既然要从Web服务器端来记录用户信息， 那么一定要有存放用户session id对应信息的地方才行 django创建存放session表命令如下： $ python manage.py migrate 出现很多绿色的ok即创建完成 ","date":"2021-04-01","objectID":"https://cywhat.cn/no-such-table-django-session/:0:0","tags":["Django"],"title":"no such table:django_session","uri":"https://cywhat.cn/no-such-table-django-session/"},{"categories":["Pip"],"content":"WARNING: Retrying (Retry(total=4, connect=None, read=None, redirect=None, status=None)) after connection broken by ‘ConnectTimeoutError(\u003cpip._vendor.urllib3.connection.HTTPSConnection object at 0x7ff8fba5f080\u003e, ‘Connection to mirrors.aliyn.com timed out. (connect timeout=15)')': /pypi/simple/python-jenkins/ $ pip3 install python-jenkins 安装python-jenkins报错如下 解决办法： $ pip3 install -i https://pypi.tuna.tsinghua.edu.cn/simple python-jenkins 如上已经安装好了 ","date":"2021-03-30","objectID":"https://cywhat.cn/pip%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E6%8B%92%E7%BB%9D%E8%BF%9E%E6%8E%A5/:0:0","tags":["Pip","Python"],"title":"pip安装插件失败，拒绝连接","uri":"https://cywhat.cn/pip%E5%AE%89%E8%A3%85%E6%8F%92%E4%BB%B6%E5%A4%B1%E8%B4%A5%E6%8B%92%E7%BB%9D%E8%BF%9E%E6%8E%A5/"},{"categories":["Nginx"],"content":"报错404，NOT FOUND可能是因为nginx.conf配置文件的俩处地方配置有误，按照下面，检查你的配置之后99.9999%是可以在浏览器访问Linux的静态文件的 1、检查nginx是否打开允许访问本地文件的配置 $ vim nginx.conf 2、查找如下图的配置项，没有的话添加即可，注意是在http这个服务中 $ proxy_intercept_errors on; 3、检查需要访问文件的路径是否配置正确，例如我要访问的静态文件名称为Bapi.html，文件存放路径为root/cccc/Bapi.html，配置如下 4、访问静态文件 可以访问，我是有域名的，所以我的访问直接就是域名+Bapi.html 其他格式的文件同理。 ","date":"2021-03-29","objectID":"https://cywhat.cn/web%E6%9C%8D%E5%8A%A1-%E8%AE%BF%E9%97%AELinux%E4%B8%AD%E7%9A%84%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/:0:0","tags":["Nginx","Linux"],"title":"web服务 访问Linux中的静态文件","uri":"https://cywhat.cn/web%E6%9C%8D%E5%8A%A1-%E8%AE%BF%E9%97%AELinux%E4%B8%AD%E7%9A%84%E9%9D%99%E6%80%81%E6%96%87%E4%BB%B6/"},{"categories":["Newman"],"content":"[已解决]Linux/macos安装newman 一、安装Node环境（1/2选其一即可） 官网下载node包，并上传到linux服务器 https://nodejs.org/en/download/ wget安装 $ wget https://nodejs.org/dist/v15.12.0/node-v15.12.0-linux-x64.tar.xz 安装解压 $ tar -xvf node-v15.12.0-linux-x64.tar.xz 移动文件夹并重命名 $ mv node-v15.12.0-linux-x64 /opt/node-15 配置环境变量 $ vim ~/.bashrc 加入以下内容 #node $ export NODE_HOME=/opt/node-15 $ export PATH=$NODE_HOME/bin:$PATH 让配置生效 $ source ~/.bashrc 查看node版本 $ node -v 如跟你安装版本一致即安装成功 查看npm版本 $ npm -v 出现版本号即安装成功 二、安装newman $ npm install -g newman --registry https://registry.npm.taobao.org/ 提示如下图无需理会 查看版本 $ newman -v ","date":"2021-03-22","objectID":"https://cywhat.cn/Linux-macos%E5%AE%89%E8%A3%85newman/:0:0","tags":["Linux","Newman","Node"],"title":"Linux/macos安装newman","uri":"https://cywhat.cn/Linux-macos%E5%AE%89%E8%A3%85newman/"},{"categories":["Python"],"content":"给公司写的一个工具平台，先部署到自己的服务器上进行测试，真是困难重重，此文章仅记录自己踩坑过程和搭建教程，不保证你能按照教程成功搭建，但能把坑提前暴露出来，避免大家重复踩坑！ ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:0:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"我的环境 部署服务器 ：CentOS Linux release 7.8.2003 (Core) Python：3.7.0 Django ：1.11.7 Nginx：1.16.1 Uwsgi：2.0.19.1 操作机：mac + iterm2 ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:1:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"1、上传/clone项目至服务器 $ git/xftp均可 ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:2:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"2、安装python3.7.0 安装python3.7.0： $ wget http://www.python.org/ftp/python/3.7.0/Python-3.7.0.tgz 解压 $ tar -xvzf Python-3.7.0.tgz 进入文件夹 $ cd Python-3.7.0 执行配置文件 $ ./configure --with-ssl 编译 $ make 安装 $ sudo make install 建立软连接 $ ln -s /usr/local/python3/bin/python3.7 /usr/bin/python3 $ ln -s /usr/local/python3/bin/pip3.7 /usr/bin/pip3 检测python3版本 $ python3 -V ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:3:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"安装虚拟环境 1、安装虚拟环境 $ pip3 install virtualenv 2、新建虚拟环境文件夹 $ mkdir pyenv 3、进入虚拟环境文件夹 $ cd pyenv 4、安装虚拟环境 $ virtualenv -p python3 myenv 5、激活虚拟环境 $ source /myenv/bin/activate 6、安装项目所需组件 $ pip3 install -r requriements.txt 7、pip安装依赖太慢使用douban源 $ pip install xx -i http://pypi.douban.com/simple/ ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:4:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"安装uwsgi 1、安装uwsgi $ pip3 install uwsgi 2、在项目根目录添加 .ini 结尾的uwsgi配置文件 $ touch uwsgi.ini (这里的uwsgi可以自己命名) 3、修改uwsgi.ini配置文件 [uwsgi] #http只能用于wusgi自己调试 要跟nginx通信需要用sockt 使用内网ip #http=111.11.11.1:9003 socket = 111.11.11.1:9001 #项目根目录 chdir = /root/mydjango/ #django应用的wsgi文件 wsgi-file = mydjango/wsgi.py #弃用主进程 master = true # vacuum = true processes = 4 threads = 2 #启动uwsgi之后的pid文件存储位置 pidfile = /root/mydjango/uwsgi.pid #启动uwsgi产生的日志存放位置 daemonize = /root/mydjango/uwsgi.log 这里先不启动uwsgi，后面等nginx安装好了一起启动即可 ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:5:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"安装nginx 1、安装依赖 $ yum -y install gcc pcre-devel zlib-devel openssl openssl-devel 2、下载nginx $ wget http://nginx.org/download/nginx-1.16.1.tar.gz 3、新建文件夹 $ mkdir /usr/loacl/nginx 4、解压nginx包 $ tar -zxvf nginx-1.16.1.tar.gz 5、进入解压后的nginx目录 $ cd nginx-1.16.1/ 6、编译 $ ./configure --prefix=/usr/local/nginx 7、安装 $ make \u0026\u0026 make install 8、修改nginx.conf配置即可 $ vim /usr/local/nginx/conf/nginx.conf 修改内容如下 server { listen 80; #这里80端口要注意别被其他程序占用 listen [::]:80 server_name xxx.xxx.xx.x; #这里的ip要换成外网可以访问的ip #charset koi8-r; #access_log logs/host.access.log main; location /static { alias /root/mydjango/web/static/; #这里放的是django的静态文件目录 } location / { include uwsgi_params; uwsgi_pass XXX.XX.XX.X:9001;#这里的ip就是上面配置的uwsgi的ip和端口 uwsgi_read_timeout 2; } #error_page 404 /404.html; # redirect server error pages to the static page /50x.html # error_page 500 502 503 504 /50x.html; location = /50x.html { root html; } 启动nginx $ cd /usr/loacl/nginx/sbin $ ./nginx ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:6:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"django项目数据库迁移 1、进入虚拟环境 $ source /myenv/bin/activate 2、迁移数据库 $ python3 manage.py makemigrations $ python3 manage.py migrate 3、迁移静态文件 $ python3 manage.py collectstatic ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:7:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"启动uwsgi 1、启动uwsgi $ uwsgi -d --ini uwsgi.ini # -d 可以让uwsgi保持在后台运行 ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:8:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"疑难解答 1、启动uwsgi.ini报错 WARNING: Can’t find section “uwsgi” in INI configuration file uwsgi.ini $ 原因：uwsgi.ini头部没有添加[uwsgi] 头部文件 添加完成以后即可 2、部署项目完成以后，而且静态资源也已经迁移，访问资源还是403，修改nginx的使用用户为root即可 $ vim /usr/local/nginx/conf/nginx.conf #有些nginx安装完成后这句是注释的 打开即可 3、nginx部署完成后，出现-bash: nginx: command not found 添加nginx的环境变量即可 $ vim /etc/profile 在末尾加入： $ PATH=$PATH:/var/local/nginx/sbin $ export PATH 然后让配置生效 $ source /etc/prifile 然后就可以使用nginx快捷命令了 ","date":"2021-03-11","objectID":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/:9:0","tags":["Linux","Nginx","Django"],"title":"Python+virtualenv+Django+nginx+uwsgi+centos7部署web应用","uri":"https://cywhat.cn/Python-virtualenv-Django-nginx-uwsgi-centos7%E9%83%A8%E7%BD%B2web%E5%BA%94%E7%94%A8/"},{"categories":["Python"],"content":"【全网最全】Centos7.7安装并配置jenkins+python+allure发送定制化报告 目前测试开发方向的接口自动化脚本很多，这里就不一一列举了，有兴趣的可以baidu/google 一大堆，本次主要根据自己公司/业务需要搭建了一套基于python3.7+pytest+allure的接口自动化脚本，由于工作原因，源码就不放了，最下面会放一个很简单的脚本，不想写的可以暂时先用下，调试通过以后，再进行业务代码的编写也是ok的，话不多说，开整。 ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:0:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Python"],"content":"Centos版本的选择 这里我选择的是阿里云的服务器，配置很低的那种，自己练手搭个小项目已经完全ok啦。 说一下为什么我选择centos7.7版本吧，目前别的版本，也有人一直在用，但是会有一些不支持的功能，比如说我上次使用的7.3中的启动服务的时候，会有一些权限问题，总之层出不穷，大家可以去踩一下坑，只有你想不到没有出现不了的新问题，当时几乎快崩溃了，然后突然google发现一位国外大神，通过更换centos版本完美的解决了这个问题，我就重新选择版本，重新开始，当自己需要的一些服务慢慢变绿的时候，心中的喜悦大概只有自己知道吧。 ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:1:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Python"],"content":"Python3.7的安装和配置 1、先用root账号登录你的服务器，注意后面的操作都是在root权限进行的噢 PS：安装python3 需要很多的依赖包，所以我们先安装依赖包建议在根目录上执行 切换到根目录：`cd /` 安装命令如下：`yum -y groupinstall \"Development tools\"` 然后继续安装下一个依赖：`yum -y install zlib-devel bzip2-devel openssl-devel ncurses-devel sqlite-devel readline-devel tk-devel gdbm-devel db4-devel libpcap-devel xz-devel` 最后一个依赖：`yum install libffi-devel -y` 如果安装上面的依赖没有出错的话，就可以下载python3.7的包了，如果安装依赖出现错误，请自行百度解决 2、下载python3.7 安装包 下载：``wget https://www.python.org/ftp/python/3.7.0/Python-3.7.0.tar.xz` **如果wget没有安装的话，请先安装wget：yum -y install wget (已安装忽略这一步)** 解压：`tar -xvJf Python-3.7.0.tar.xz` 3、解压完成后，编译安装 创建编译安装目录：`mkdir /usr/local/python3` 解压完成后会创建一个Python-3.7.0文件夹，进入该文件夹：`cd Python-3.7.0` 配置到创建编译安装目录：`./configure --prefix=/usr/local/python3 ` 然后开始编译安装：`make \u0026\u0026 make install ` 4、创建软件连接 创建python3软链接：`ln -s /usr/local/python3/bin/python3 /usr/local/bin/python3` 创建pip3软链接：`ln -s /usr/local/python3/bin/pip3 /usr/local/bin/pip3 ` 5、到这里就安装完成了，验证安装是否成功 查看python3版本：`python3 -V` 查看pip3版本：`pip3 -V` 分别指向安装路径就安装成功啦 6、配置环境变量 环境变量内容：`export PYTHON_HOME=/usr/local/python3/` `export PATH=$PYTHON_HOME/bin:$PATH` 编辑环境变量文件：`vim /etc/profile` 把环境变量内容粘贴到环境变量文件最后一行保存：`：wq` 让刚刚更改的环境变量生效：`source /etc/profile` 上面让环境变量生效只是本次有效，下次连接就失效了，这里要把命令放到 ：`vim ~/.bashrc` 中，如下图 ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:2:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Python"],"content":"Python测试脚本 这里的脚本可以使用我的(Github)，也可以自己写一个，目的主要是为了接下来的jenkins配置使用 Github ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:3:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Python"],"content":"安装Jenkins 1、安装jenkins必须安装jdk 下载jdk:`wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" https://download.oracle.com/otn-pub/java/jdk/8u201-b09/42970487e3af4f5aa5bca3f542482c60/jdk-8u201-linux-x64.tar.gz` 或者：`wget --no-check-certificate --no-cookies --header \"Cookie: oraclelicense=accept-securebackup-cookie\" http://download.oracle.com/otn-pub/java/jdk/8u131-b11/d54c1d3a095b4ff2b6607d096fa80163/jdk-8u131-linux-x64.rpm` 我这里下载的是rpm的文件类型 下载完成之后解压：`rpm -ivh jdk-8u151-linux-x64.rpm` 2、配置java环境变量 编辑系统环境变量：`vim /etc/profile` 变量内容(根据自己安装的jdk路径更改)：`export JAVA_HOME=/usr/lib/jvm/java` `export PATH=$JAVA_HOME/bin:$PATH` 让配置生效 ：`source /etc/profile` 3、安装Jenkins 首先下载jenkins：`wget -O /etc/yum.repos.d/jenkins.repo http://pkg.jenkins-ci.org/redhat/jenkins.repo` 然后导入公钥：`rpm --import https://pkg.jenkins.io/redhat/jenkins.io.key` 安装jenkins：`yum install -y jenkins --nogpgcheck` 4、配置jenkins 更改端口：`vi /etc/sysconfig/jenkins` ：`JENKINS_PORT=\"8080\"` 更改用户：`vi /etc/sysconfig/jenkins` ：`JENKINS_USER=\"root\"` 然后让配置生效：`source /etc/sysconfig/jenkins` 5、重新启动jenkins 启动：`service jenkins restart` 6、打开jenkins网址 浏览器打开：`你的ip+8080` ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:4:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Python"],"content":"配置Jenkins 因为我这里已经安装过jenkins了，一开始的jenkins安装配置就不说了，其他博主的都ok，主要说一下怎么配置allure 1、安装allure插件 找到![在这里插入图片描述](https://img-blog.csdnimg.cn/20200903152325565.png#pic_center) 搜索 `allure` 安装就好了 2、配置jdk和allure jdk：allure：3、新建job(选择自由风格) 配置git地址：配置shell： 这里要注意一下，最好找到你的jenkins的工作空间路径，把项目放到你的工作空间路径去 4、添加allure报告插件 5、在Advanced中配置html生成的目录 6、具体路径配置相关，可以参考下我项目中的目录结构，自己亲自动手配置一遍就懂了 7、打开报告 Build Now完成后会生成报告 8、查看报告 查看报告： ","date":"2020-09-03","objectID":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/:5:0","tags":["Python","Jenkins","Allure","Linux"],"title":"Centos7.7安装并配置jenkins+python+allure发送定制化报告","uri":"https://cywhat.cn/Centos7-7%E5%AE%89%E8%A3%85%E5%B9%B6%E9%85%8D%E7%BD%AEjenkins-python-allure%E5%8F%91%E9%80%81%E5%AE%9A%E5%88%B6%E5%8C%96%E6%8A%A5%E5%91%8A/"},{"categories":["Mysql"],"content":"一 安装前准备 1、检查是否已经安装过mysql，执行命令 $ rpm -qa | grep mysql 2、查询所有Mysql对应的文件夹 $ whereis mysql 如果有的话请删除相关目录或文件 $ rm -rf /usr/local/mysql 并再次执行whereis mysql 验证是否删除完毕 3、检查mysql用户组和用户是否存在，如果没有，则创建 1)、查看是否存在组 $ cat /etc/group | grep mysql 我的是已经创建过了，所以就不创建了 没有的话需要创建用户跟用户组 2)、创建用户组跟用户 $ groupadd mysql 创建用户组 $ useradd -r -g mysql mysql 创建用户且属于mysql用户组 4、从官网下载是用于Linux的Mysql安装包 下载命令： $ wget https://dev.mysql.com/get/Downloads/MySQL-5.7/mysql-5.7.24-linux-glibc2.12-x86_64.tar.gz 也可以直接到mysql官网选择其他版本进行下载。 二 安装Mysql 1、解压mysql安装包： $ tar -zvxf mysql-5.7.24-linux-glibc2.12-x86_64.tar.gz 解压完之后会在当前目录生成 mysql-5.7.24-linux-glibc2.12-x86_64这样的文件夹 移动该文件到/usr/local/下 并将文件夹名称修改为mysql 如果/usr/local/下已经存在mysql 将已存在mysql文件修改为其他名称 否则后续步骤可能无法正确进行 移动并将文件夹命名为mysql $ mv mysql-5.7.24-linux-glibc2.12-x86_64 /usr/local/mysql 2、在/usr/local/mysql目录下创建data目录 $ mkdir /usr/local/mysql/data 3、更改mysql目录下所有的目录及文件夹所属的用户组和用户，以及权限 $ cd /usr/local/ $ chown -R mysql mysql/ $ chgrp -R mysql mysql/ 4、编译安装并初始化mysql,务必记住初始化输出日志末尾的密码（数据库管理员临时密码） $ cd /usr/local/mysql/bin/ 进入到bin目录进行编译安装 $ ./mysqld --initialize --user=mysql --basedir=/usr/local/mysql/ --datadir=/usr/local/mysql/data/ --lc_messages_dir=/usr/local/mysql/share --lc_messages=en_US 补充说明： 第4步时，可能会出现错误： 依次执行以下命令安装编译mysql需要的插件 $ yum install libaio-devel.x86_64 $ yum -y install numactl 5、运行初始化命令成功后，输出日志如下： 记录日志最末尾位置root@localhost:后的字符串，此字符串为mysql管理员临时登录密码。 6、编辑配置文件my.cnf，添加配置如下 $ vi /etc/my.cnf 如果 my.cnf 文件没有的话自行添加 [mysqld] basedir=/usr/local/mysql/ datadir=/usr/local/mysql/data/ port = 3306 symbolic-links=0 symbolic-links=0 max_connections=400 innodb_file_per_table=1 lower_case_table_names=1 explicit_defaults_for_timestamp=1 $ 按esc 输入 ：wq 保存退出即可 配置如下图： 7、设为开机启动 $ cd /usr/local/mysql/support-files/ $ cp mysql.server /etc/init.d/mysql $ vi /etc/init.d/mysql 打开编辑之后会看到下面有俩个字段(basedir和datadir)没有key 我们添加好key $ basedir=/usr/local/mysql/ $ datadir=/usr/local/mysql/data/ 8、授权为可执行状态 $ chmod +x /etc/init.d/mysql 9、开机启动 $ chkconfig --add mysql 10、启动mysql $ service mysql start 显示如下结果，说明数据库安装成功 如果出现如下提示信息 $ Starting MySQL... ERROR! The server quit without updating PID file 查看是否存在mysql和mysqld的服务，如果存在，则结束进程，再重新执行启动命令 $ 这里上面的错误孤岛了很久没效果的话 建议卸载了mysql重新安装一次 11、查询mysql服务 $ ps -ef|grep mysql 12、登录mysql，修改密码(密码为步骤5生成的临时密码) $ ./mysql -u root -p 如果提示mysql：未找到命令 请进入/usl/local/mysql/bin/目录下执行 Enter password: $ mysql\u003eset password for root@localhost = password('yourpass'); 13、开放远程连接 $ mysql\u003euse mysql; $ msyql\u003eupdate user set user.Host='%' where user.User='root'; $ mysql\u003eflush privileges; 如果是云服务器的话，需要设置安全组，请自行百度 ","date":"2020-03-30","objectID":"https://cywhat.cn/centos7%E5%AE%89%E8%A3%85mysql5-7%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8/:0:0","tags":["Linux","Mysql"],"title":"Centos7安装mysql5.7亲测可用","uri":"https://cywhat.cn/centos7%E5%AE%89%E8%A3%85mysql5-7%E4%BA%B2%E6%B5%8B%E5%8F%AF%E7%94%A8/"},{"categories":["Mac"],"content":"【已解决】mac 安装brew mac是自带ruby的 打开命令行工具terminal 1、查看ruby版本 $ ruby -version 2、然后使用ruby安装brew $ ruby -e \"$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install)\" 3、brew 安装模块方法(举个例子：安装wget) $ brew install wget 4、brew卸载模块方法(举个例子：卸载wget) $ brew uninstall wget 5、其他brew命令 $ brew list brew跟pip有点类似，其他命令不一一列举了，大家自己help下就好啦 ","date":"2020-03-18","objectID":"https://cywhat.cn/mac-%E5%AE%89%E8%A3%85brew/:1:0","tags":["Mac","Brew"],"title":"mac 安装brew","uri":"https://cywhat.cn/mac-%E5%AE%89%E8%A3%85brew/"},{"categories":["Flask"],"content":"1、删除原有的用大写开头的Flask插件 $ pip uninstall Flask 2、yum安装 flask $ yum install python-flask 3、等待安装完成就可以允许程序啦（100%有用） ","date":"2020-03-06","objectID":"https://cywhat.cn/ImportError-No-module-named-flask/:0:0","tags":["Linux","Flask"],"title":"ImportError: No module named flask","uri":"https://cywhat.cn/ImportError-No-module-named-flask/"},{"categories":["Git"],"content":"如果是开发人员，忽略此步骤，从下面大字的开始即可： 项目开始阶段，初始化项目（init），提交本地的代码到仓库，将本地仓库的代码推送到远端库（push）； 项目开发人员从远端库克隆代码到本机（clone），此时本地仅有一个master分支；新建dev分支并切换、在Dev分支中进行开发工作，其实就是修改并提交代码（add+commit）；当开发的dev分支的代码没问题时，将dev分支合并（merge）到master；将master推送到远端分支，至此，其他的项目开发人员就可以查看到你提交的代码了！ dev分支也可以是修复某个bug或者为了开发某个issue建立的，当bug已经修复或issue开发完成时，把dev合并到master之后，就可以把它删除了 git基本命令 初始化：创建一个git仓库，创建之后就会在当前目录生成一个.git的文件 $ git init 添加文件：把文件添加到缓冲区 $ git add filename 添加所有文件到缓冲区（从目前掌握的水平看，和后面加“.”的区别在于，加all可以添加被手动删除的文件，而加“.”不行）： $ git add . $ git add --all 删除文件 $ git rm filename 提交：提交缓冲区的所有修改到仓库(注意：如果修改了文件但是没有add到缓冲区，也是不会被提交的) $ git commit -m \"提交的说明\" commit可以一次提交缓冲区的所有文件 查看git库的状态，未提交的文件，分为两种，add过已经在缓冲区的，未add过的 $ git status -b 比较：如果文件修改了，还没有提交，就可以比较文件修改前后的差异 $ git diff filename 查看日志 $ git log 版本回退：可以将当前仓库回退到历史的某个版本 $ git reset 第一种用法：回退到上一个版本（HEAD代表当前版本，有一个^代表上一个版本，以此类推） $ git reset --hard HEAD^ 第二种用法：回退到指定版本(其中d7b5是想回退的指定版本号的前几位) $ git reset --hard d7b5 查看命令历史：查看仓库的操作历史 $ git reflog git分支管理 查看分支的情况，前面带*号的就是当前分支 $ git branch 创建分支 $ git branch \"分支名\" 切换当前分支到指定分支 $ git checkout \"分支名\" 创建分支并切换到创建的分支 $ git checkout -b \"分支名\" 合并某分支的内容到当前分支 $ git merge \"分支名\" 删除分支 $ git branch -d \"分支名\" 如果两个分支同时进行了同一个文件的修改和提交，在merge时就会产生冲突，首先要手动打开文件解决冲突，再提交，就相当于进行了merge $ git log --graph 新建标签，默认为最新版本，后面加上版本号参数则可指定版本增加标签 $ git tag \"标签名\" \"版本号\" 查看所有标签： git tag 查看标签的详细信息 git show \"标签名\" 将tag提交到远端仓库 推送所有tag: $ git push origin --tags 推送某个tag： $ git push origin v1.0 git远端库相关 $ git remote add origin git://127.0.0.1/abc.git 移除远端仓库 $ git remote remove origin 将本地仓库内容推送到远端仓库(-u 表示第一次推送master分支的所有内容，后面再推送就不需要-u了)，跟commit的区别在于一个是提交到本地仓库，一个是提交到远程仓库 $ git push -u origin master 从远端库更新内容到本地（相当于svn的update）， $ git pull tips:如果push的时候，本地和文件和远端文件有冲突，就要先pull、然后手动解决冲突，才能继续push git记住用户名密码 push的时候默认每次都需输入GitHub的用户名和密码，在git仓库根目录下.git文件夹的config文件末尾增加如下内容，即可记住用户名密码，无需每次推送都输入了 $ [credential] helper = store 强制推送分支 $ git push -f origin master ","date":"2019-10-23","objectID":"https://cywhat.cn/Git%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/:0:0","tags":["Git"],"title":"Git基础命令","uri":"https://cywhat.cn/Git%E5%9F%BA%E7%A1%80%E5%91%BD%E4%BB%A4/"},{"categories":["Postman"],"content":"Postman请自行下载 下面是在网上随便抓了一个请求地址来做演示，把请求地址填入地址栏，此请求为GET请求。点击Send发送请求，请求结果将会在下方显示出来。每次的请求历史数据，会被记录下来，但是经常使用的请求，还是保存一下，这么每次用的时候，选择就行了，及其方便。 另外，最好创建一个账号，这样数据将会永久保存下来，不至于重装了系统或者换了台电脑数据都没了的尴尬。 保存的时候起个好听的名字 Header会传输一些我们需要的一些通用的数据，定义好之后，每个接口几乎都是一样的。所以，把这些数据进行预置，这样就不用每新建一个请求，都要重复的添加Header了。 请求的时候，会把请求状态，请求的时间，以及返回的数据大小返回回来。这样一目了然。最常见的status就是200表示成功，400表示未找到资源。500开头的基本都是服务端异常等等。我之前写了一篇很详细的状态说明，请参见HTTP状态码大全 点击params可以把url里的参数以列表的形式展现出来，方便编写 还有一种更方便的编辑方式，点击Bulk Edit ，直接修改字符串的方式修改，而且可以复制粘贴，方便迁移到其它地方。而且这个功能在其它参数编辑的地方都适用。 我们来看看如何发送POST接口 form-data、x-www-form-urlencoded、raw、binary的区别 x-www-form-urlencoded 当用户通过form表单提交数据的时候，例如： \u003cform method=\"post\"action=\"http://api.test.com/user\" \u003e \u003cinputtype=\"text\" name=\"name\"\u003e \u003cinputtype=\"text\" name=\"age\"\u003e \u003c/form\u003e 提交时会向服务器端发出这样的数据（已经去除部分不相关的头信息），数据如下： POST /user HTTP/1.1 Content-Type:application/x-www-form-urlencoded Accept-Encoding: gzip, deflate Host: api.test.com Content-Length: 21 Connection: Keep-Alive Cache-Control: no-cache name=互扯程序\u0026age=18 它的Content-Type是application/x-www-form-urlencoded，这表示消息内容会经过URL编码 form-data 当需要上传文件（可以上传多个文件），并且有参数同时传递的时候，选择这个选项可以上传文件。 举个例子 \u003cform method=\"post\"action=\"http://api.test.com/user/upload.do\" enctype=”multipart/form-data”\u003e \u003cinputtype=\"text\" name=\"desc\"\u003e \u003cinputtype=\"file\" name=\"pic\"\u003e \u003c/form\u003e 浏览器将会发送以下数据： POST /user/upload.do HTTP/1.1 Accept-Language: zh-cn,zh;q=0.5 Accept-Charset: GBK,utf-8;q=0.7,*;q=0.7 Connection: keep-alive Content-Length: 60408 Content-Type:multipart/form-data; boundary=ZnGpDtePMx0KrHh_G0X99Yef9r8JZsRJSXC Host: api.test.com 我们看到Content-Type:multipart/form-data; 当需要上传数据的时候，必须设置enctype=“multipart/form-data”， enctype：规定在发送到服务器之前应该如何对表单数据进行编码，他有如下的三个值： application/x-www-form-urlencoded。默认的编码方式。所有字符都会进行编码（空格转换为 “+” 加号，特殊符号转换为 ASCII HEX 值）。 multipart/form-data 。 指定传输数据为二进制类型，比如图片、mp3、文件。 不对字符编码。在使用包含文件上传控件的表单时，必须使用该值。 text/plain。纯文体的传输。空格转换为 “+” 加号，但不对特殊字符编码。 其实form表单在你不写enctype属性时，也默认为其添加了enctype属性值，默认值是enctype=\"application/x- www-form-urlencoded”，所以上面注册用户的时候虽然没写，其实默认加上了。 raw 当需要给服务端传递json，xml等数据的时候选择raw，当选择了raw的时候，header里会自动加上 Content-Type: application/json 例如： $.ajax({ url:\"/user/\", data:JSON.stringify(user), method:\"POST\", contentType:\"application/json\", success: function(res){ console.info(\"添加成功\") } }); binary（注意了这个格式这里可以上传你的压测数据文件） PS：压测文件可以是csv格式跟json格式的 这里还可以在Pre-requestScript\"中设置环境变量 “username”, “password”,在Body 中选取\"form-data” 格式，输入所需的key-value, value即为变量{{username}}, {{password}}。 postman.setEnvironmentVariable(\"username\",data[\"username\"]); postman.setEnvironmentVariable(\"password\",data[\"password\"]); 然后再Tests里添加断言 tests[\"Status code is 200\"] = responseCode.code === 200; tests[\"Response time is less than 10000ms\"] = responseTime \u003c 10000; console.log(responseTime); 只能上传一个文件，也不能添加参数。 压力测试 当你需要验证你的接口的抗压能力的时候，可以点击Runner，进行压力测试 注意：压力测试只能以文件夹的方式执行多个接口，不能单独执行，如果想要测试某一个接口，就创一个文件夹，这个文件夹里只有一个要测试的接口。 点击执行，并发执行了500次。每次再100毫秒内返回结果。 ","date":"2019-03-28","objectID":"https://cywhat.cn/Postmant%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/:0:0","tags":["Postman"],"title":"Postmant压力测试","uri":"https://cywhat.cn/Postmant%E5%8E%8B%E5%8A%9B%E6%B5%8B%E8%AF%95/"},{"categories":["Https"],"content":"在介绍状态码之前，要简单讲一下为什么要有状态码这个东西。计算机之间的通信以协议为共同基础，客户端和服务端都按照协议的约定进行通信。HTTP的状态码就在HTTP的协议内，规定了很多的状态。客户端请求服务端后，服务端就返回结果，同时返回状态码。告诉客户端，本次请求是成功了还是失败了，还是要客户端做什么操作。那为什么不使用文本状态码呢？不是更加清晰直观吗？这是因为这些状态协议里面已经规定了，提到状态码，就是表示本条状态。 状态码分为1-5开头的CODE,以下依次说明,请仔细阅读噢 1** 类状态码称之为Information 状态吗，表示信息正在处理。 2** 类状态码称为为Success状态码，表示请求正常完成。 3** 类状态码称之为Redirection 状态码，表示需要客户端进行附加操作（如跳转。重定向） 4** 类状态码称之为Error状态码，通常是由于客户端的错误导致的。 5** 类状态吗称为Server Error状态码，通常是服务端的错误导致的。 小结下：状态码分为客户端错误状态码、服务端错误状态码、成功状态码，重定向状态码等。 ##1\u00262 1** 不常见到哈,直接从2开始讲了 200(ok)示从客户端成功发出去请求到服务端了,服务端也接收到了这条请求并正确返回 204 No Content 请求已经成功了，但是却没有返回任何结果（实体）。通常使用php die() exit()函数会引发204状态码 206 Partial Content 范围请求状态码。 ","date":"2019-03-07","objectID":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/:0:0","tags":["Https"],"title":"HTTP各个status code代表什么意思","uri":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"},{"categories":["Https"],"content":"3 301 Moved Permanently 表示你请求的页面资源现在已经转移位置了，你需要到新的地方去需找该页面。这个即重定向，服务器的response首部里会有location字段值来提示。 302(Found)和301差不多。表示你请求的页面资源现在已经转移位置了，你要到新的地方去寻找。但是新的地方也不是固定的，说不定过几天还要换。不提示用户保存书签，提示用户跳转。 303 See other .表示你请求的页面中包含着你想要拿到资源的地址。比如你到门卫处去取快递，到了门卫处，大爷说快递已经交给前台了。这个过程会返回303状态码。 304 Not Modified 表示资源已经找到了，但是和上次相比没有更新。浏览器读取缓存。 307 Temporary Redirect 临时重定向。 ","date":"2019-03-07","objectID":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/:1:0","tags":["Https"],"title":"HTTP各个status code代表什么意思","uri":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"},{"categories":["Https"],"content":"4 400 Bad Request 报文语法错误。 401 Unauthorized 需要通过HTTP认证（BASIC 或者DIGEST）. 403 Forbidden 目录、文件权限错误都会报此状态码。 404 服务器上无此资源，一般情况为路径错误。 ","date":"2019-03-07","objectID":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/:2:0","tags":["Https"],"title":"HTTP各个status code代表什么意思","uri":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"},{"categories":["Https"],"content":"5 500 Internal Server Error 服务端错误，有可能是WEB应用存在错误。 502 Internal Server Error服务端错误,有可能是服务端服务以及停止运行。 503 Serveice Unavailable 服务器超负荷运行。 这些东西，没必要死记硬背。使用的次数多了慢慢就记住了.一开始使用的时候去查下文档就好了。这也是我写此篇博客的原因：留此存证，以备不时之需。 ","date":"2019-03-07","objectID":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/:3:0","tags":["Https"],"title":"HTTP各个status code代表什么意思","uri":"https://cywhat.cn/HTTP%E5%90%84%E4%B8%AAstatus-code%E4%BB%A3%E8%A1%A8%E4%BB%80%E4%B9%88%E6%84%8F%E6%80%9D/"},{"categories":["Iterm2"],"content":"一、 首先我们在终端本地要写一个登录的脚本，eg： 当然首先要touch login.sh 啦，下面就是脚本文件，比较low，大神勿喷，会更炫酷写法的小伙伴可以自己参考这个思路写，不会的直接复制就好啦 　 $ #!/usr/bin/expect -f set hostname [lindex $argv 0] set user [lindex $argv 1] set password [lindex $argv 2] set timeout 30 spawn ssh -tt $user@$hostname; expect { \"yes/no\" { send \"yes\\r\";exp_continue } \"*password:\" { send \"$password\\r\";} } interact ~ 如果写好了在sh login.sh 的时候，发现expect不是一个可执行的命令的话，我们还需要下载expect依赖噢，命令如下 $ sudo apt install expect 这个是mac版本的哈,如果小伙伴是windows的推荐去下载cygwin灰常好用哈,下载的时候一路下 一步就好了,中途会让你安装需要的功能,记得安装一下三个依赖包,很重要!(tcl、expect、apt-cyg), 下完就可以奔放了哈, ##二、 下面就来编写我们的懒人登陆ssh啦，其实就是利用“起别名”来实现的，同样的哈，大神勿喷 首先找到启动终端就运行的一个文件bash_profile然后编辑这个文件，输入以下内容： 　 $ alias 别名='expect login.sh sship root passwd' ps：别名就是你登陆终端之后输入这个别名就会自动登陆/或者操作你的指令啦！ 具体图示如下，因为我是wsl的终端，所以跟mac的启动文件名不一致，但是原理是一样的（windows小伙伴如果也想体验mac终端，可以评论或者私聊） ","date":"2019-01-26","objectID":"https://cywhat.cn/Iterm2-Mac%E8%87%AA%E5%B8%A6%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9Fssh/:1:0","tags":["Iterm2","Mac"],"title":"Iterm2/Mac自带终端工具快速ssh","uri":"https://cywhat.cn/Iterm2-Mac%E8%87%AA%E5%B8%A6%E7%BB%88%E7%AB%AF%E5%B7%A5%E5%85%B7%E5%BF%AB%E9%80%9Fssh/"},{"categories":["Linux"],"content":"查看所有运行中的进程: $ ps aux | less 显示所有进程: $ ps -A $ ps -e 显示进程的树状图: $ pstree 查看进程: $ netstat -ntlp ","date":"2018-12-25","objectID":"https://cywhat.cn/Linux%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%9D%A5%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%91%BD%E4%BB%A4/:0:0","tags":["Linux"],"title":"Linux中常用来查看进程的命令","uri":"https://cywhat.cn/Linux%E4%B8%AD%E5%B8%B8%E7%94%A8%E6%9D%A5%E6%9F%A5%E7%9C%8B%E8%BF%9B%E7%A8%8B%E7%9A%84%E5%91%BD%E4%BB%A4/"},{"categories":["Linux"],"content":"1、将上述设置写到家目录的.bashrc文件中（~/.bashrc） $ alias cywhat ='cd /root/XX/XX/XX/XX' 2、然后让配置生效 $ source ./bashrc 3、最后我们输入设置的cywhat（这个名字自己设置）就可以快速进入设置的长目录了 ","date":"2018-11-02","objectID":"https://cywhat.cn/Linux%E5%BF%AB%E6%8D%B7%E8%BF%9B%E5%85%A5%E9%95%BF%E7%9B%AE%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95/:0:0","tags":["Linux"],"title":"Linux快捷进入长目录的方法","uri":"https://cywhat.cn/Linux%E5%BF%AB%E6%8D%B7%E8%BF%9B%E5%85%A5%E9%95%BF%E7%9B%AE%E5%BD%95%E7%9A%84%E6%96%B9%E6%B3%95/"},{"categories":["Git"],"content":"在日常工作中，我们经常会遇到要更新一个项目，但是由于更改了配置，需要将这些配置commit或者checkout，但是有的同学不想commit怎么办呢，只能通过checkout，那么问题又来了，改了很多配置，checkout之后又要重新修改配置，就很烦。 哈哈哈，在偶然的机会，找前端大神学会了俩句命令，亲测在代码merge没冲突没问题的情况下都可以成功！ 那么我们开始吧 1、首先 你需要update的项目 会告诉你更改了那些配置，必须要还原或者提交 $ git pull 2、执行以下命令 $ git stash 命令的意思是将这些更改过的配置 暂存起来，注意是暂存！ 3、然后git pull 你会发现，神奇的以及开始update了，可以看到那些代码是更改过的 4、最后我们要把暂存的配置，给它取出来，用到以下命令 $ git statsh pop 5、最后你发现之前暂存的配置，以及取出来并且成功替换了update之后的配置 ","date":"2018-10-29","objectID":"https://cywhat.cn/checkout%E6%97%A0%E6%95%88/:0:0","tags":["Git"],"title":"checkout无效","uri":"https://cywhat.cn/checkout%E6%97%A0%E6%95%88/"},{"categories":["Npm"],"content":"​ ERROR in ./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{“vue”:true,“id”:“data-v-a5e4f82a”,“scoped”:false,“hasInlineConfig”:false}!./node_modules/stylus-loader?{“import”:[“~@didi/ada/style/mixins.styl”,\"/home/xiaoju/manhattan-hera-webapp/client/style/base.styl”]}!./node_modules/vue-loader/lib/selector.js?type=styles\u0026index=0\u0026bustCache!./client/components/panel_links.vue Cannot find module ‘postcss-import’ @ ./node_modules/style-loader!./node_modules/css-loader!./node_modules/vue-loader/lib/style-compiler?{“vue”:true,“id”:“data-v-a5e4f82a”,“scoped”:false,“hasInlineConfig”:false}!./node_modules/stylus-loader?{“import”:[“~@didi/ada/style/mixins.styl”,\"/home/xiaoju/manhattan-hera-webapp/client/style/base.styl”]}!./node_modules/vue-loader/lib/selector.js?type=styles\u0026index=0\u0026bustCache!./client/components/panel_links.vue 4:14-454 @ ./client/components/panel_links.vue @ ./client/app.ts @ multi ./client/app.ts 如下图： 在测试项目的时候，部署前端在启动前端环境的时候遇到缺少组件css-loader，/style-compiler，stylus-loader，尝试了开启外网，npm的全局安装，单独安装组件( npn install stylus-loader css-loader style-loader style-compiler –save-dev)后无果，最后在前端大神的指导下，发现是npm的目录没有权限，然后找到了破解npm无法全局安装下载的最新办法！亲测有效！ ##方法一： 更改npm的默认安装目录 1、为全局安装创建一个安装目录 $ mkdir ~/.npm-global 2、配置npm以使用新的目录路径 $ npm config set prefix '~/.npm-global' 3、打开或创建一个~/.profile文件并添加以下行 $ export PATH=~/.npm-global/bin:$PATH 4、然后全局安装npm即可 $ npm install 5、然后你惊奇的会发现之前全局安装不下来的东西都可以下载下来了 在success出现的那一刻，会觉得整个虚拟机都美艳不可方物~ ##方法二：使用节点版本管理器重新安装（高效适合高手） 1、由于npm和node.js产品由不同的实体管理，因此更新和维护可能变得复杂。此外，Node.js安装过程将npm安装在仅具有本地权限的目录中。当您尝试全局运行包时，这可能会导致权限错误。 为了解决这两个问题，许多开发人员选择使用节点版本管理器或nvm来安装npm。版本管理器将避免权限错误，并将解决更新Node.js和npm的复杂性。 此外，开发人员可以使用nvm在多个版本的npm上测试他们的应用程序。nvm使您可以轻松切换npm以及节点版本。这样可以更轻松地确保您的应用程序适用于大多数用户，即使他们使用的是其他版本的npm。如果您决定安装版本管理器，请使用您选择的版本管理器的说明来学习如何切换版本，并了解如何使用最新版本的npm保持最新。 nvm如何安装具体请参考 https://github.com/creationix/nvm/blob/master/README.md#installation 2、安装完之后验证登陆系统将提示您输入用户名，密码和电子邮件。请务必使用与在网站上输入的用户名完全相同的方式拼写您的用户名，否则您将创建一个新帐户。 $ npm login 3、要测试您是否已成功登录 $ npm whoami 4、然后尝试更新你的npm版本 $ npm install npm@next -g ","date":"2018-10-17","objectID":"https://cywhat.cn/npm%E7%BC%BA%E5%B0%91css-loader-style-compilerstylus-loader%E9%97%AE%E9%A2%98npm%E6%B2%A1%E6%9C%89%E6%9D%83%E9%99%90%E6%97%A0%E6%B3%95%E5%85%A8%E5%B1%80%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/:0:0","tags":["Node","Npm"],"title":"npm缺少css-loader，/style-compiler，stylus-loader问题，npm没有权限无法全局更新问题","uri":"https://cywhat.cn/npm%E7%BC%BA%E5%B0%91css-loader-style-compilerstylus-loader%E9%97%AE%E9%A2%98npm%E6%B2%A1%E6%9C%89%E6%9D%83%E9%99%90%E6%97%A0%E6%B3%95%E5%85%A8%E5%B1%80%E6%9B%B4%E6%96%B0%E9%97%AE%E9%A2%98/"},{"categories":["Appium"],"content":"很多QA在做UI自动化或者App自动化的时候，会遇到在web页面要抓取App模式的元素，或者是在App要抓取H5页面的元素，从网上整理了一些方法，不一定能解决，但是试一下也未尝不可，如果解决了就记得关注一波咯！！！python噢~~~ self.driver.switch_to.context() self.driver.switch_to.context('WEBVIEW_1')app --\u003e web self.driver.switch_to.context('NATIVE_APP')web --\u003e app 如果是从App转到web 选择WEBVIEW_1， 如果web转到App 选择 NATIVE_APP ","date":"2018-10-11","objectID":"https://cywhat.cn/App%E8%B7%9Fweb%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0%E9%A1%B5%E9%9D%A2%E7%9B%B8%E4%BA%92%E5%88%87%E6%8D%A2/:0:0","tags":["Android","Appium"],"title":"App跟web定位元素页面相互切换","uri":"https://cywhat.cn/App%E8%B7%9Fweb%E5%AE%9A%E4%BD%8D%E5%85%83%E7%B4%A0%E9%A1%B5%E9%9D%A2%E7%9B%B8%E4%BA%92%E5%88%87%E6%8D%A2/"},{"categories":["Appium"],"content":"使用uiautomatorviewer 查看Android某些页面元素，出现如图错误： $ Error obtaining UI hierarchy Reason: Error taking device screenshot: null 再网上找了很多解决办法依然没解决 总结了一下原因： 1、该app不支持该页面的截屏功能所以uiautomatorviewer捕捉不到 2、手机需要重启 3、非原装数据线 4、appium服务异常需要重新连接 5、可以尝试切换USB接口 6、最后可以把手机开发者选项的USB调试撤销权限，在重新获取 　以上为个人观点，不代表百分百解决，仅供参考！ ","date":"2018-10-11","objectID":"https://cywhat.cn/Error-taking-device-screenshot-null/:0:0","tags":["Android","Appium"],"title":"Error taking device screenshot: null","uri":"https://cywhat.cn/Error-taking-device-screenshot-null/"}]